// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: shapecollection.proto
// Protobuf C++ Version: 5.29.3

#include "shapecollection.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace shapecollection {

inline constexpr Geometry::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        active_{false},
        shape_type_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Geometry::Geometry(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GeometryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GeometryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GeometryDefaultTypeInternal() {}
  union {
    Geometry _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GeometryDefaultTypeInternal _Geometry_default_instance_;

inline constexpr Directions::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        direction_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        shape_metrics_{nullptr},
        active_{false} {}

template <typename>
PROTOBUF_CONSTEXPR Directions::Directions(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DirectionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DirectionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DirectionsDefaultTypeInternal() {}
  union {
    Directions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DirectionsDefaultTypeInternal _Directions_default_instance_;
}  // namespace shapecollection
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_shapecollection_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_shapecollection_2eproto = nullptr;
const ::uint32_t
    TableStruct_shapecollection_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::shapecollection::Geometry, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::shapecollection::Geometry, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::shapecollection::Geometry, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::shapecollection::Geometry, _impl_.active_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::shapecollection::Geometry, _impl_.shape_type_),
        PROTOBUF_FIELD_OFFSET(::shapecollection::Directions, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::shapecollection::Directions, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::shapecollection::Directions, _impl_.direction_name_),
        PROTOBUF_FIELD_OFFSET(::shapecollection::Directions, _impl_.active_),
        PROTOBUF_FIELD_OFFSET(::shapecollection::Directions, _impl_.shape_metrics_),
        ~0u,
        ~0u,
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::shapecollection::Geometry)},
        {13, 24, -1, sizeof(::shapecollection::Directions)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::shapecollection::_Geometry_default_instance_._instance,
    &::shapecollection::_Directions_default_instance_._instance,
};
const char descriptor_table_protodef_shapecollection_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\025shapecollection.proto\022\017shapecollection"
    "\032\ngrid.proto\"r\n\010Geometry\022\014\n\004name\030\001 \001(\t\022\016"
    "\n\006active\030\002 \001(\010\022\032\n\004star\030\003 \001(\0132\n.grid.Star"
    "H\000\022\036\n\006square\030\004 \001(\0132\014.grid.SquareH\000B\014\n\nsh"
    "ape_type\"Y\n\nDirections\022\026\n\016direction_name"
    "\030\001 \001(\t\022\016\n\006active\030\002 \001(\010\022#\n\rshape_metrics\030"
    "\003 \001(\0132\014.grid.Shapesb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_shapecollection_2eproto_deps[1] =
    {
        &::descriptor_table_grid_2eproto,
};
static ::absl::once_flag descriptor_table_shapecollection_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_shapecollection_2eproto = {
    false,
    false,
    267,
    descriptor_table_protodef_shapecollection_2eproto,
    "shapecollection.proto",
    &descriptor_table_shapecollection_2eproto_once,
    descriptor_table_shapecollection_2eproto_deps,
    1,
    2,
    schemas,
    file_default_instances,
    TableStruct_shapecollection_2eproto::offsets,
    file_level_enum_descriptors_shapecollection_2eproto,
    file_level_service_descriptors_shapecollection_2eproto,
};
namespace shapecollection {
// ===================================================================

class Geometry::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::shapecollection::Geometry, _impl_._oneof_case_);
};

void Geometry::set_allocated_star(::grid::Star* star) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_shape_type();
  if (star) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(star)->GetArena();
    if (message_arena != submessage_arena) {
      star = ::google::protobuf::internal::GetOwnedMessage(message_arena, star, submessage_arena);
    }
    set_has_star();
    _impl_.shape_type_.star_ = star;
  }
  // @@protoc_insertion_point(field_set_allocated:shapecollection.Geometry.star)
}
void Geometry::clear_star() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (shape_type_case() == kStar) {
    if (GetArena() == nullptr) {
      delete _impl_.shape_type_.star_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.shape_type_.star_);
    }
    clear_has_shape_type();
  }
}
void Geometry::set_allocated_square(::grid::Square* square) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_shape_type();
  if (square) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(square)->GetArena();
    if (message_arena != submessage_arena) {
      square = ::google::protobuf::internal::GetOwnedMessage(message_arena, square, submessage_arena);
    }
    set_has_square();
    _impl_.shape_type_.square_ = square;
  }
  // @@protoc_insertion_point(field_set_allocated:shapecollection.Geometry.square)
}
void Geometry::clear_square() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (shape_type_case() == kSquare) {
    if (GetArena() == nullptr) {
      delete _impl_.shape_type_.square_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.shape_type_.square_);
    }
    clear_has_shape_type();
  }
}
Geometry::Geometry(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:shapecollection.Geometry)
}
inline PROTOBUF_NDEBUG_INLINE Geometry::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::shapecollection::Geometry& from_msg)
      : name_(arena, from.name_),
        shape_type_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

Geometry::Geometry(
    ::google::protobuf::Arena* arena,
    const Geometry& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Geometry* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.active_ = from._impl_.active_;
  switch (shape_type_case()) {
    case SHAPE_TYPE_NOT_SET:
      break;
      case kStar:
        _impl_.shape_type_.star_ = ::google::protobuf::Message::CopyConstruct<::grid::Star>(arena, *from._impl_.shape_type_.star_);
        break;
      case kSquare:
        _impl_.shape_type_.square_ = ::google::protobuf::Message::CopyConstruct<::grid::Square>(arena, *from._impl_.shape_type_.square_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:shapecollection.Geometry)
}
inline PROTOBUF_NDEBUG_INLINE Geometry::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        shape_type_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void Geometry::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.active_ = {};
}
Geometry::~Geometry() {
  // @@protoc_insertion_point(destructor:shapecollection.Geometry)
  SharedDtor(*this);
}
inline void Geometry::SharedDtor(MessageLite& self) {
  Geometry& this_ = static_cast<Geometry&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  if (this_.has_shape_type()) {
    this_.clear_shape_type();
  }
  this_._impl_.~Impl_();
}

void Geometry::clear_shape_type() {
// @@protoc_insertion_point(one_of_clear_start:shapecollection.Geometry)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (shape_type_case()) {
    case kStar: {
      if (GetArena() == nullptr) {
        delete _impl_.shape_type_.star_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.shape_type_.star_);
      }
      break;
    }
    case kSquare: {
      if (GetArena() == nullptr) {
        delete _impl_.shape_type_.square_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.shape_type_.square_);
      }
      break;
    }
    case SHAPE_TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = SHAPE_TYPE_NOT_SET;
}


inline void* Geometry::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Geometry(arena);
}
constexpr auto Geometry::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Geometry),
                                            alignof(Geometry));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Geometry::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Geometry_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Geometry::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Geometry>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Geometry::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Geometry>(), &Geometry::ByteSizeLong,
            &Geometry::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Geometry, _impl_._cached_size_),
        false,
    },
    &Geometry::kDescriptorMethods,
    &descriptor_table_shapecollection_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Geometry::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 4, 2, 37, 2> Geometry::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::shapecollection::Geometry>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool active = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Geometry, _impl_.active_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Geometry, _impl_.active_)}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Geometry, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(Geometry, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool active = 2;
    {PROTOBUF_FIELD_OFFSET(Geometry, _impl_.active_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .grid.Star star = 3;
    {PROTOBUF_FIELD_OFFSET(Geometry, _impl_.shape_type_.star_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .grid.Square square = 4;
    {PROTOBUF_FIELD_OFFSET(Geometry, _impl_.shape_type_.square_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::grid::Star>()},
    {::_pbi::TcParser::GetTable<::grid::Square>()},
  }}, {{
    "\30\4\0\0\0\0\0\0"
    "shapecollection.Geometry"
    "name"
  }},
};

PROTOBUF_NOINLINE void Geometry::Clear() {
// @@protoc_insertion_point(message_clear_start:shapecollection.Geometry)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.active_ = false;
  clear_shape_type();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Geometry::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Geometry& this_ = static_cast<const Geometry&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Geometry::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Geometry& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:shapecollection.Geometry)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string name = 1;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "shapecollection.Geometry.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // bool active = 2;
          if (this_._internal_active() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                2, this_._internal_active(), target);
          }

          switch (this_.shape_type_case()) {
            case kStar: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  3, *this_._impl_.shape_type_.star_, this_._impl_.shape_type_.star_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kSquare: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  4, *this_._impl_.shape_type_.square_, this_._impl_.shape_type_.square_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:shapecollection.Geometry)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Geometry::ByteSizeLong(const MessageLite& base) {
          const Geometry& this_ = static_cast<const Geometry&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Geometry::ByteSizeLong() const {
          const Geometry& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:shapecollection.Geometry)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string name = 1;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // bool active = 2;
            if (this_._internal_active() != 0) {
              total_size += 2;
            }
          }
          switch (this_.shape_type_case()) {
            // .grid.Star star = 3;
            case kStar: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.shape_type_.star_);
              break;
            }
            // .grid.Square square = 4;
            case kSquare: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.shape_type_.square_);
              break;
            }
            case SHAPE_TYPE_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Geometry::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Geometry*>(&to_msg);
  auto& from = static_cast<const Geometry&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:shapecollection.Geometry)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_active() != 0) {
    _this->_impl_.active_ = from._impl_.active_;
  }
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_shape_type();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kStar: {
        if (oneof_needs_init) {
          _this->_impl_.shape_type_.star_ =
              ::google::protobuf::Message::CopyConstruct<::grid::Star>(arena, *from._impl_.shape_type_.star_);
        } else {
          _this->_impl_.shape_type_.star_->MergeFrom(from._internal_star());
        }
        break;
      }
      case kSquare: {
        if (oneof_needs_init) {
          _this->_impl_.shape_type_.square_ =
              ::google::protobuf::Message::CopyConstruct<::grid::Square>(arena, *from._impl_.shape_type_.square_);
        } else {
          _this->_impl_.shape_type_.square_->MergeFrom(from._internal_square());
        }
        break;
      }
      case SHAPE_TYPE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Geometry::CopyFrom(const Geometry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shapecollection.Geometry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Geometry::InternalSwap(Geometry* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
        swap(_impl_.active_, other->_impl_.active_);
  swap(_impl_.shape_type_, other->_impl_.shape_type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Geometry::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Directions::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Directions>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Directions, _impl_._has_bits_);
};

void Directions::clear_shape_metrics() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.shape_metrics_ != nullptr) _impl_.shape_metrics_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Directions::Directions(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:shapecollection.Directions)
}
inline PROTOBUF_NDEBUG_INLINE Directions::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::shapecollection::Directions& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        direction_name_(arena, from.direction_name_) {}

Directions::Directions(
    ::google::protobuf::Arena* arena,
    const Directions& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Directions* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.shape_metrics_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::grid::Shapes>(
                              arena, *from._impl_.shape_metrics_)
                        : nullptr;
  _impl_.active_ = from._impl_.active_;

  // @@protoc_insertion_point(copy_constructor:shapecollection.Directions)
}
inline PROTOBUF_NDEBUG_INLINE Directions::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        direction_name_(arena) {}

inline void Directions::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, shape_metrics_),
           0,
           offsetof(Impl_, active_) -
               offsetof(Impl_, shape_metrics_) +
               sizeof(Impl_::active_));
}
Directions::~Directions() {
  // @@protoc_insertion_point(destructor:shapecollection.Directions)
  SharedDtor(*this);
}
inline void Directions::SharedDtor(MessageLite& self) {
  Directions& this_ = static_cast<Directions&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.direction_name_.Destroy();
  delete this_._impl_.shape_metrics_;
  this_._impl_.~Impl_();
}

inline void* Directions::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Directions(arena);
}
constexpr auto Directions::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Directions),
                                            alignof(Directions));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Directions::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Directions_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Directions::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Directions>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Directions::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Directions>(), &Directions::ByteSizeLong,
            &Directions::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Directions, _impl_._cached_size_),
        false,
    },
    &Directions::kDescriptorMethods,
    &descriptor_table_shapecollection_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Directions::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 49, 2> Directions::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Directions, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::shapecollection::Directions>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string direction_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Directions, _impl_.direction_name_)}},
    // bool active = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Directions, _impl_.active_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Directions, _impl_.active_)}},
    // .grid.Shapes shape_metrics = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(Directions, _impl_.shape_metrics_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string direction_name = 1;
    {PROTOBUF_FIELD_OFFSET(Directions, _impl_.direction_name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool active = 2;
    {PROTOBUF_FIELD_OFFSET(Directions, _impl_.active_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .grid.Shapes shape_metrics = 3;
    {PROTOBUF_FIELD_OFFSET(Directions, _impl_.shape_metrics_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::grid::Shapes>()},
  }}, {{
    "\32\16\0\0\0\0\0\0"
    "shapecollection.Directions"
    "direction_name"
  }},
};

PROTOBUF_NOINLINE void Directions::Clear() {
// @@protoc_insertion_point(message_clear_start:shapecollection.Directions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.direction_name_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.shape_metrics_ != nullptr);
    _impl_.shape_metrics_->Clear();
  }
  _impl_.active_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Directions::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Directions& this_ = static_cast<const Directions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Directions::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Directions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:shapecollection.Directions)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string direction_name = 1;
          if (!this_._internal_direction_name().empty()) {
            const std::string& _s = this_._internal_direction_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "shapecollection.Directions.direction_name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // bool active = 2;
          if (this_._internal_active() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                2, this_._internal_active(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .grid.Shapes shape_metrics = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.shape_metrics_, this_._impl_.shape_metrics_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:shapecollection.Directions)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Directions::ByteSizeLong(const MessageLite& base) {
          const Directions& this_ = static_cast<const Directions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Directions::ByteSizeLong() const {
          const Directions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:shapecollection.Directions)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string direction_name = 1;
            if (!this_._internal_direction_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_direction_name());
            }
          }
           {
            // .grid.Shapes shape_metrics = 3;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.shape_metrics_);
            }
          }
           {
            // bool active = 2;
            if (this_._internal_active() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Directions::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Directions*>(&to_msg);
  auto& from = static_cast<const Directions&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:shapecollection.Directions)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_direction_name().empty()) {
    _this->_internal_set_direction_name(from._internal_direction_name());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.shape_metrics_ != nullptr);
    if (_this->_impl_.shape_metrics_ == nullptr) {
      _this->_impl_.shape_metrics_ =
          ::google::protobuf::Message::CopyConstruct<::grid::Shapes>(arena, *from._impl_.shape_metrics_);
    } else {
      _this->_impl_.shape_metrics_->MergeFrom(*from._impl_.shape_metrics_);
    }
  }
  if (from._internal_active() != 0) {
    _this->_impl_.active_ = from._impl_.active_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Directions::CopyFrom(const Directions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:shapecollection.Directions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Directions::InternalSwap(Directions* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.direction_name_, &other->_impl_.direction_name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Directions, _impl_.active_)
      + sizeof(Directions::_impl_.active_)
      - PROTOBUF_FIELD_OFFSET(Directions, _impl_.shape_metrics_)>(
          reinterpret_cast<char*>(&_impl_.shape_metrics_),
          reinterpret_cast<char*>(&other->_impl_.shape_metrics_));
}

::google::protobuf::Metadata Directions::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace shapecollection
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_shapecollection_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
