// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: AreaSearchStatus.proto
// Protobuf C++ Version: 5.29.3

#ifndef AreaSearchStatus_2eproto_2epb_2eh
#define AreaSearchStatus_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_AreaSearchStatus_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_AreaSearchStatus_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_AreaSearchStatus_2eproto;
namespace AreaSearchStatus {
class AreaSearchStatus;
struct AreaSearchStatusDefaultTypeInternal;
extern AreaSearchStatusDefaultTypeInternal _AreaSearchStatus_default_instance_;
class GeoCircle;
struct GeoCircleDefaultTypeInternal;
extern GeoCircleDefaultTypeInternal _GeoCircle_default_instance_;
class GeoPoint;
struct GeoPointDefaultTypeInternal;
extern GeoPointDefaultTypeInternal _GeoPoint_default_instance_;
class GeoPolygon;
struct GeoPolygonDefaultTypeInternal;
extern GeoPolygonDefaultTypeInternal _GeoPolygon_default_instance_;
class GeoRectangle;
struct GeoRectangleDefaultTypeInternal;
extern GeoRectangleDefaultTypeInternal _GeoRectangle_default_instance_;
}  // namespace AreaSearchStatus
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace AreaSearchStatus {
enum GeometryKind_Enum : int {
  POLYGON = 0,
  CIRCLE = 1,
  UNKNOWN = 2,
  GeometryKind_Enum_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  GeometryKind_Enum_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool GeometryKind_Enum_IsValid(int value);
extern const uint32_t GeometryKind_Enum_internal_data_[];
constexpr GeometryKind_Enum GeometryKind_Enum_MIN = static_cast<GeometryKind_Enum>(0);
constexpr GeometryKind_Enum GeometryKind_Enum_MAX = static_cast<GeometryKind_Enum>(2);
constexpr int GeometryKind_Enum_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
GeometryKind_Enum_descriptor();
template <typename T>
const std::string& GeometryKind_Enum_Name(T value) {
  static_assert(std::is_same<T, GeometryKind_Enum>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to GeometryKind_Enum_Name().");
  return GeometryKind_Enum_Name(static_cast<GeometryKind_Enum>(value));
}
template <>
inline const std::string& GeometryKind_Enum_Name(GeometryKind_Enum value) {
  return ::google::protobuf::internal::NameOfDenseEnum<GeometryKind_Enum_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool GeometryKind_Enum_Parse(absl::string_view name, GeometryKind_Enum* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GeometryKind_Enum>(
      GeometryKind_Enum_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class GeoPolygon final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:AreaSearchStatus.GeoPolygon) */ {
 public:
  inline GeoPolygon() : GeoPolygon(nullptr) {}
  ~GeoPolygon() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GeoPolygon* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GeoPolygon));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GeoPolygon(
      ::google::protobuf::internal::ConstantInitialized);

  inline GeoPolygon(const GeoPolygon& from) : GeoPolygon(nullptr, from) {}
  inline GeoPolygon(GeoPolygon&& from) noexcept
      : GeoPolygon(nullptr, std::move(from)) {}
  inline GeoPolygon& operator=(const GeoPolygon& from) {
    CopyFrom(from);
    return *this;
  }
  inline GeoPolygon& operator=(GeoPolygon&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GeoPolygon& default_instance() {
    return *internal_default_instance();
  }
  static inline const GeoPolygon* internal_default_instance() {
    return reinterpret_cast<const GeoPolygon*>(
        &_GeoPolygon_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(GeoPolygon& a, GeoPolygon& b) { a.Swap(&b); }
  inline void Swap(GeoPolygon* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GeoPolygon* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GeoPolygon* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GeoPolygon>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GeoPolygon& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GeoPolygon& from) { GeoPolygon::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GeoPolygon* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "AreaSearchStatus.GeoPolygon"; }

 protected:
  explicit GeoPolygon(::google::protobuf::Arena* arena);
  GeoPolygon(::google::protobuf::Arena* arena, const GeoPolygon& from);
  GeoPolygon(::google::protobuf::Arena* arena, GeoPolygon&& from) noexcept
      : GeoPolygon(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBoundingPointsFieldNumber = 1,
  };
  // double bounding_points = 1;
  void clear_bounding_points() ;
  double bounding_points() const;
  void set_bounding_points(double value);

  private:
  double _internal_bounding_points() const;
  void _internal_set_bounding_points(double value);

  public:
  // @@protoc_insertion_point(class_scope:AreaSearchStatus.GeoPolygon)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GeoPolygon& from_msg);
    double bounding_points_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_AreaSearchStatus_2eproto;
};
// -------------------------------------------------------------------

class GeoPoint final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:AreaSearchStatus.GeoPoint) */ {
 public:
  inline GeoPoint() : GeoPoint(nullptr) {}
  ~GeoPoint() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GeoPoint* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GeoPoint));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GeoPoint(
      ::google::protobuf::internal::ConstantInitialized);

  inline GeoPoint(const GeoPoint& from) : GeoPoint(nullptr, from) {}
  inline GeoPoint(GeoPoint&& from) noexcept
      : GeoPoint(nullptr, std::move(from)) {}
  inline GeoPoint& operator=(const GeoPoint& from) {
    CopyFrom(from);
    return *this;
  }
  inline GeoPoint& operator=(GeoPoint&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GeoPoint& default_instance() {
    return *internal_default_instance();
  }
  static inline const GeoPoint* internal_default_instance() {
    return reinterpret_cast<const GeoPoint*>(
        &_GeoPoint_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(GeoPoint& a, GeoPoint& b) { a.Swap(&b); }
  inline void Swap(GeoPoint* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GeoPoint* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GeoPoint* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GeoPoint>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GeoPoint& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GeoPoint& from) { GeoPoint::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GeoPoint* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "AreaSearchStatus.GeoPoint"; }

 protected:
  explicit GeoPoint(::google::protobuf::Arena* arena);
  GeoPoint(::google::protobuf::Arena* arena, const GeoPoint& from);
  GeoPoint(::google::protobuf::Arena* arena, GeoPoint&& from) noexcept
      : GeoPoint(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLatitudeDegFieldNumber = 1,
    kLongitudeDegFieldNumber = 2,
    kAltitudeMslMFieldNumber = 3,
  };
  // double latitude_deg = 1;
  void clear_latitude_deg() ;
  double latitude_deg() const;
  void set_latitude_deg(double value);

  private:
  double _internal_latitude_deg() const;
  void _internal_set_latitude_deg(double value);

  public:
  // double longitude_deg = 2;
  void clear_longitude_deg() ;
  double longitude_deg() const;
  void set_longitude_deg(double value);

  private:
  double _internal_longitude_deg() const;
  void _internal_set_longitude_deg(double value);

  public:
  // double altitude_msl_m = 3;
  void clear_altitude_msl_m() ;
  double altitude_msl_m() const;
  void set_altitude_msl_m(double value);

  private:
  double _internal_altitude_msl_m() const;
  void _internal_set_altitude_msl_m(double value);

  public:
  // @@protoc_insertion_point(class_scope:AreaSearchStatus.GeoPoint)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GeoPoint& from_msg);
    double latitude_deg_;
    double longitude_deg_;
    double altitude_msl_m_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_AreaSearchStatus_2eproto;
};
// -------------------------------------------------------------------

class GeoCircle final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:AreaSearchStatus.GeoCircle) */ {
 public:
  inline GeoCircle() : GeoCircle(nullptr) {}
  ~GeoCircle() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GeoCircle* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GeoCircle));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GeoCircle(
      ::google::protobuf::internal::ConstantInitialized);

  inline GeoCircle(const GeoCircle& from) : GeoCircle(nullptr, from) {}
  inline GeoCircle(GeoCircle&& from) noexcept
      : GeoCircle(nullptr, std::move(from)) {}
  inline GeoCircle& operator=(const GeoCircle& from) {
    CopyFrom(from);
    return *this;
  }
  inline GeoCircle& operator=(GeoCircle&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GeoCircle& default_instance() {
    return *internal_default_instance();
  }
  static inline const GeoCircle* internal_default_instance() {
    return reinterpret_cast<const GeoCircle*>(
        &_GeoCircle_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(GeoCircle& a, GeoCircle& b) { a.Swap(&b); }
  inline void Swap(GeoCircle* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GeoCircle* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GeoCircle* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GeoCircle>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GeoCircle& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GeoCircle& from) { GeoCircle::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GeoCircle* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "AreaSearchStatus.GeoCircle"; }

 protected:
  explicit GeoCircle(::google::protobuf::Arena* arena);
  GeoCircle(::google::protobuf::Arena* arena, const GeoCircle& from);
  GeoCircle(::google::protobuf::Arena* arena, GeoCircle&& from) noexcept
      : GeoCircle(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCenterFieldNumber = 1,
    kRadiusMFieldNumber = 2,
  };
  // double center = 1;
  void clear_center() ;
  double center() const;
  void set_center(double value);

  private:
  double _internal_center() const;
  void _internal_set_center(double value);

  public:
  // double radius_m = 2;
  void clear_radius_m() ;
  double radius_m() const;
  void set_radius_m(double value);

  private:
  double _internal_radius_m() const;
  void _internal_set_radius_m(double value);

  public:
  // @@protoc_insertion_point(class_scope:AreaSearchStatus.GeoCircle)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GeoCircle& from_msg);
    double center_;
    double radius_m_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_AreaSearchStatus_2eproto;
};
// -------------------------------------------------------------------

class GeoRectangle final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:AreaSearchStatus.GeoRectangle) */ {
 public:
  inline GeoRectangle() : GeoRectangle(nullptr) {}
  ~GeoRectangle() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GeoRectangle* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GeoRectangle));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GeoRectangle(
      ::google::protobuf::internal::ConstantInitialized);

  inline GeoRectangle(const GeoRectangle& from) : GeoRectangle(nullptr, from) {}
  inline GeoRectangle(GeoRectangle&& from) noexcept
      : GeoRectangle(nullptr, std::move(from)) {}
  inline GeoRectangle& operator=(const GeoRectangle& from) {
    CopyFrom(from);
    return *this;
  }
  inline GeoRectangle& operator=(GeoRectangle&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GeoRectangle& default_instance() {
    return *internal_default_instance();
  }
  static inline const GeoRectangle* internal_default_instance() {
    return reinterpret_cast<const GeoRectangle*>(
        &_GeoRectangle_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(GeoRectangle& a, GeoRectangle& b) { a.Swap(&b); }
  inline void Swap(GeoRectangle* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GeoRectangle* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GeoRectangle* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GeoRectangle>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GeoRectangle& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GeoRectangle& from) { GeoRectangle::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GeoRectangle* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "AreaSearchStatus.GeoRectangle"; }

 protected:
  explicit GeoRectangle(::google::protobuf::Arena* arena);
  GeoRectangle(::google::protobuf::Arena* arena, const GeoRectangle& from);
  GeoRectangle(::google::protobuf::Arena* arena, GeoRectangle&& from) noexcept
      : GeoRectangle(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUpperLeftPointFieldNumber = 1,
    kBottomRightPointFieldNumber = 2,
  };
  // .AreaSearchStatus.GeoPoint upper_left_point = 1;
  bool has_upper_left_point() const;
  void clear_upper_left_point() ;
  const ::AreaSearchStatus::GeoPoint& upper_left_point() const;
  PROTOBUF_NODISCARD ::AreaSearchStatus::GeoPoint* release_upper_left_point();
  ::AreaSearchStatus::GeoPoint* mutable_upper_left_point();
  void set_allocated_upper_left_point(::AreaSearchStatus::GeoPoint* value);
  void unsafe_arena_set_allocated_upper_left_point(::AreaSearchStatus::GeoPoint* value);
  ::AreaSearchStatus::GeoPoint* unsafe_arena_release_upper_left_point();

  private:
  const ::AreaSearchStatus::GeoPoint& _internal_upper_left_point() const;
  ::AreaSearchStatus::GeoPoint* _internal_mutable_upper_left_point();

  public:
  // .AreaSearchStatus.GeoPoint bottom_right_point = 2;
  bool has_bottom_right_point() const;
  void clear_bottom_right_point() ;
  const ::AreaSearchStatus::GeoPoint& bottom_right_point() const;
  PROTOBUF_NODISCARD ::AreaSearchStatus::GeoPoint* release_bottom_right_point();
  ::AreaSearchStatus::GeoPoint* mutable_bottom_right_point();
  void set_allocated_bottom_right_point(::AreaSearchStatus::GeoPoint* value);
  void unsafe_arena_set_allocated_bottom_right_point(::AreaSearchStatus::GeoPoint* value);
  ::AreaSearchStatus::GeoPoint* unsafe_arena_release_bottom_right_point();

  private:
  const ::AreaSearchStatus::GeoPoint& _internal_bottom_right_point() const;
  ::AreaSearchStatus::GeoPoint* _internal_mutable_bottom_right_point();

  public:
  // @@protoc_insertion_point(class_scope:AreaSearchStatus.GeoRectangle)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GeoRectangle& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::AreaSearchStatus::GeoPoint* upper_left_point_;
    ::AreaSearchStatus::GeoPoint* bottom_right_point_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_AreaSearchStatus_2eproto;
};
// -------------------------------------------------------------------

class AreaSearchStatus final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:AreaSearchStatus.AreaSearchStatus) */ {
 public:
  inline AreaSearchStatus() : AreaSearchStatus(nullptr) {}
  ~AreaSearchStatus() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AreaSearchStatus* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AreaSearchStatus));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AreaSearchStatus(
      ::google::protobuf::internal::ConstantInitialized);

  inline AreaSearchStatus(const AreaSearchStatus& from) : AreaSearchStatus(nullptr, from) {}
  inline AreaSearchStatus(AreaSearchStatus&& from) noexcept
      : AreaSearchStatus(nullptr, std::move(from)) {}
  inline AreaSearchStatus& operator=(const AreaSearchStatus& from) {
    CopyFrom(from);
    return *this;
  }
  inline AreaSearchStatus& operator=(AreaSearchStatus&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AreaSearchStatus& default_instance() {
    return *internal_default_instance();
  }
  enum GeoCase {
    kActiveGeometryType = 9,
    kPolygon = 10,
    kCircle = 11,
    GEO_NOT_SET = 0,
  };
  static inline const AreaSearchStatus* internal_default_instance() {
    return reinterpret_cast<const AreaSearchStatus*>(
        &_AreaSearchStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(AreaSearchStatus& a, AreaSearchStatus& b) { a.Swap(&b); }
  inline void Swap(AreaSearchStatus* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AreaSearchStatus* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AreaSearchStatus* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AreaSearchStatus>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AreaSearchStatus& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AreaSearchStatus& from) { AreaSearchStatus::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AreaSearchStatus* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "AreaSearchStatus.AreaSearchStatus"; }

 protected:
  explicit AreaSearchStatus(::google::protobuf::Arena* arena);
  AreaSearchStatus(::google::protobuf::Arena* arena, const AreaSearchStatus& from);
  AreaSearchStatus(::google::protobuf::Arena* arena, AreaSearchStatus&& from) noexcept
      : AreaSearchStatus(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHeatmapDataFieldNumber = 8,
    kHeatmapBoundingBoxFieldNumber = 5,
    kVehicleIdFieldNumber = 1,
    kTimestampEpochUsecFieldNumber = 2,
    kEstimatedCompletionTimeEpochUsecFieldNumber = 3,
    kEstimatedPercentCompleteFieldNumber = 4,
    kHeatmapHeightFieldNumber = 6,
    kHeatmapWidthFieldNumber = 7,
    kActiveGeometryTypeFieldNumber = 9,
    kPolygonFieldNumber = 10,
    kCircleFieldNumber = 11,
  };
  // repeated uint32 heatmap_data = 8;
  int heatmap_data_size() const;
  private:
  int _internal_heatmap_data_size() const;

  public:
  void clear_heatmap_data() ;
  ::uint32_t heatmap_data(int index) const;
  void set_heatmap_data(int index, ::uint32_t value);
  void add_heatmap_data(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& heatmap_data() const;
  ::google::protobuf::RepeatedField<::uint32_t>* mutable_heatmap_data();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_heatmap_data() const;
  ::google::protobuf::RepeatedField<::uint32_t>* _internal_mutable_heatmap_data();

  public:
  // .AreaSearchStatus.GeoRectangle heatmap_bounding_box = 5;
  bool has_heatmap_bounding_box() const;
  void clear_heatmap_bounding_box() ;
  const ::AreaSearchStatus::GeoRectangle& heatmap_bounding_box() const;
  PROTOBUF_NODISCARD ::AreaSearchStatus::GeoRectangle* release_heatmap_bounding_box();
  ::AreaSearchStatus::GeoRectangle* mutable_heatmap_bounding_box();
  void set_allocated_heatmap_bounding_box(::AreaSearchStatus::GeoRectangle* value);
  void unsafe_arena_set_allocated_heatmap_bounding_box(::AreaSearchStatus::GeoRectangle* value);
  ::AreaSearchStatus::GeoRectangle* unsafe_arena_release_heatmap_bounding_box();

  private:
  const ::AreaSearchStatus::GeoRectangle& _internal_heatmap_bounding_box() const;
  ::AreaSearchStatus::GeoRectangle* _internal_mutable_heatmap_bounding_box();

  public:
  // uint64 vehicle_id = 1;
  void clear_vehicle_id() ;
  ::uint64_t vehicle_id() const;
  void set_vehicle_id(::uint64_t value);

  private:
  ::uint64_t _internal_vehicle_id() const;
  void _internal_set_vehicle_id(::uint64_t value);

  public:
  // uint64 timestamp_epoch_usec = 2;
  void clear_timestamp_epoch_usec() ;
  ::uint64_t timestamp_epoch_usec() const;
  void set_timestamp_epoch_usec(::uint64_t value);

  private:
  ::uint64_t _internal_timestamp_epoch_usec() const;
  void _internal_set_timestamp_epoch_usec(::uint64_t value);

  public:
  // uint64 estimated_completion_time_epoch_usec = 3;
  void clear_estimated_completion_time_epoch_usec() ;
  ::uint64_t estimated_completion_time_epoch_usec() const;
  void set_estimated_completion_time_epoch_usec(::uint64_t value);

  private:
  ::uint64_t _internal_estimated_completion_time_epoch_usec() const;
  void _internal_set_estimated_completion_time_epoch_usec(::uint64_t value);

  public:
  // float estimated_percent_complete = 4;
  void clear_estimated_percent_complete() ;
  float estimated_percent_complete() const;
  void set_estimated_percent_complete(float value);

  private:
  float _internal_estimated_percent_complete() const;
  void _internal_set_estimated_percent_complete(float value);

  public:
  // uint32 heatmap_height = 6;
  void clear_heatmap_height() ;
  ::uint32_t heatmap_height() const;
  void set_heatmap_height(::uint32_t value);

  private:
  ::uint32_t _internal_heatmap_height() const;
  void _internal_set_heatmap_height(::uint32_t value);

  public:
  // uint32 heatmap_width = 7;
  void clear_heatmap_width() ;
  ::uint32_t heatmap_width() const;
  void set_heatmap_width(::uint32_t value);

  private:
  ::uint32_t _internal_heatmap_width() const;
  void _internal_set_heatmap_width(::uint32_t value);

  public:
  // .AreaSearchStatus.GeometryKind_Enum active_geometry_type = 9;
  bool has_active_geometry_type() const;
  void clear_active_geometry_type() ;
  ::AreaSearchStatus::GeometryKind_Enum active_geometry_type() const;
  void set_active_geometry_type(::AreaSearchStatus::GeometryKind_Enum value);

  private:
  ::AreaSearchStatus::GeometryKind_Enum _internal_active_geometry_type() const;
  void _internal_set_active_geometry_type(::AreaSearchStatus::GeometryKind_Enum value);

  public:
  // .AreaSearchStatus.GeoPolygon polygon = 10;
  bool has_polygon() const;
  private:
  bool _internal_has_polygon() const;

  public:
  void clear_polygon() ;
  const ::AreaSearchStatus::GeoPolygon& polygon() const;
  PROTOBUF_NODISCARD ::AreaSearchStatus::GeoPolygon* release_polygon();
  ::AreaSearchStatus::GeoPolygon* mutable_polygon();
  void set_allocated_polygon(::AreaSearchStatus::GeoPolygon* value);
  void unsafe_arena_set_allocated_polygon(::AreaSearchStatus::GeoPolygon* value);
  ::AreaSearchStatus::GeoPolygon* unsafe_arena_release_polygon();

  private:
  const ::AreaSearchStatus::GeoPolygon& _internal_polygon() const;
  ::AreaSearchStatus::GeoPolygon* _internal_mutable_polygon();

  public:
  // .AreaSearchStatus.GeoCircle circle = 11;
  bool has_circle() const;
  private:
  bool _internal_has_circle() const;

  public:
  void clear_circle() ;
  const ::AreaSearchStatus::GeoCircle& circle() const;
  PROTOBUF_NODISCARD ::AreaSearchStatus::GeoCircle* release_circle();
  ::AreaSearchStatus::GeoCircle* mutable_circle();
  void set_allocated_circle(::AreaSearchStatus::GeoCircle* value);
  void unsafe_arena_set_allocated_circle(::AreaSearchStatus::GeoCircle* value);
  ::AreaSearchStatus::GeoCircle* unsafe_arena_release_circle();

  private:
  const ::AreaSearchStatus::GeoCircle& _internal_circle() const;
  ::AreaSearchStatus::GeoCircle* _internal_mutable_circle();

  public:
  void clear_geo();
  GeoCase geo_case() const;
  // @@protoc_insertion_point(class_scope:AreaSearchStatus.AreaSearchStatus)
 private:
  class _Internal;
  void set_has_active_geometry_type();
  void set_has_polygon();
  void set_has_circle();
  inline bool has_geo() const;
  inline void clear_has_geo();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 11, 3,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AreaSearchStatus& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::uint32_t> heatmap_data_;
    ::google::protobuf::internal::CachedSize _heatmap_data_cached_byte_size_;
    ::AreaSearchStatus::GeoRectangle* heatmap_bounding_box_;
    ::uint64_t vehicle_id_;
    ::uint64_t timestamp_epoch_usec_;
    ::uint64_t estimated_completion_time_epoch_usec_;
    float estimated_percent_complete_;
    ::uint32_t heatmap_height_;
    ::uint32_t heatmap_width_;
    union GeoUnion {
      constexpr GeoUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      int active_geometry_type_;
      ::AreaSearchStatus::GeoPolygon* polygon_;
      ::AreaSearchStatus::GeoCircle* circle_;
    } geo_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_AreaSearchStatus_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// AreaSearchStatus

// uint64 vehicle_id = 1;
inline void AreaSearchStatus::clear_vehicle_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vehicle_id_ = ::uint64_t{0u};
}
inline ::uint64_t AreaSearchStatus::vehicle_id() const {
  // @@protoc_insertion_point(field_get:AreaSearchStatus.AreaSearchStatus.vehicle_id)
  return _internal_vehicle_id();
}
inline void AreaSearchStatus::set_vehicle_id(::uint64_t value) {
  _internal_set_vehicle_id(value);
  // @@protoc_insertion_point(field_set:AreaSearchStatus.AreaSearchStatus.vehicle_id)
}
inline ::uint64_t AreaSearchStatus::_internal_vehicle_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.vehicle_id_;
}
inline void AreaSearchStatus::_internal_set_vehicle_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vehicle_id_ = value;
}

// uint64 timestamp_epoch_usec = 2;
inline void AreaSearchStatus::clear_timestamp_epoch_usec() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_epoch_usec_ = ::uint64_t{0u};
}
inline ::uint64_t AreaSearchStatus::timestamp_epoch_usec() const {
  // @@protoc_insertion_point(field_get:AreaSearchStatus.AreaSearchStatus.timestamp_epoch_usec)
  return _internal_timestamp_epoch_usec();
}
inline void AreaSearchStatus::set_timestamp_epoch_usec(::uint64_t value) {
  _internal_set_timestamp_epoch_usec(value);
  // @@protoc_insertion_point(field_set:AreaSearchStatus.AreaSearchStatus.timestamp_epoch_usec)
}
inline ::uint64_t AreaSearchStatus::_internal_timestamp_epoch_usec() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_epoch_usec_;
}
inline void AreaSearchStatus::_internal_set_timestamp_epoch_usec(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_epoch_usec_ = value;
}

// uint64 estimated_completion_time_epoch_usec = 3;
inline void AreaSearchStatus::clear_estimated_completion_time_epoch_usec() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.estimated_completion_time_epoch_usec_ = ::uint64_t{0u};
}
inline ::uint64_t AreaSearchStatus::estimated_completion_time_epoch_usec() const {
  // @@protoc_insertion_point(field_get:AreaSearchStatus.AreaSearchStatus.estimated_completion_time_epoch_usec)
  return _internal_estimated_completion_time_epoch_usec();
}
inline void AreaSearchStatus::set_estimated_completion_time_epoch_usec(::uint64_t value) {
  _internal_set_estimated_completion_time_epoch_usec(value);
  // @@protoc_insertion_point(field_set:AreaSearchStatus.AreaSearchStatus.estimated_completion_time_epoch_usec)
}
inline ::uint64_t AreaSearchStatus::_internal_estimated_completion_time_epoch_usec() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.estimated_completion_time_epoch_usec_;
}
inline void AreaSearchStatus::_internal_set_estimated_completion_time_epoch_usec(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.estimated_completion_time_epoch_usec_ = value;
}

// float estimated_percent_complete = 4;
inline void AreaSearchStatus::clear_estimated_percent_complete() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.estimated_percent_complete_ = 0;
}
inline float AreaSearchStatus::estimated_percent_complete() const {
  // @@protoc_insertion_point(field_get:AreaSearchStatus.AreaSearchStatus.estimated_percent_complete)
  return _internal_estimated_percent_complete();
}
inline void AreaSearchStatus::set_estimated_percent_complete(float value) {
  _internal_set_estimated_percent_complete(value);
  // @@protoc_insertion_point(field_set:AreaSearchStatus.AreaSearchStatus.estimated_percent_complete)
}
inline float AreaSearchStatus::_internal_estimated_percent_complete() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.estimated_percent_complete_;
}
inline void AreaSearchStatus::_internal_set_estimated_percent_complete(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.estimated_percent_complete_ = value;
}

// .AreaSearchStatus.GeoRectangle heatmap_bounding_box = 5;
inline bool AreaSearchStatus::has_heatmap_bounding_box() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.heatmap_bounding_box_ != nullptr);
  return value;
}
inline void AreaSearchStatus::clear_heatmap_bounding_box() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.heatmap_bounding_box_ != nullptr) _impl_.heatmap_bounding_box_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::AreaSearchStatus::GeoRectangle& AreaSearchStatus::_internal_heatmap_bounding_box() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::AreaSearchStatus::GeoRectangle* p = _impl_.heatmap_bounding_box_;
  return p != nullptr ? *p : reinterpret_cast<const ::AreaSearchStatus::GeoRectangle&>(::AreaSearchStatus::_GeoRectangle_default_instance_);
}
inline const ::AreaSearchStatus::GeoRectangle& AreaSearchStatus::heatmap_bounding_box() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:AreaSearchStatus.AreaSearchStatus.heatmap_bounding_box)
  return _internal_heatmap_bounding_box();
}
inline void AreaSearchStatus::unsafe_arena_set_allocated_heatmap_bounding_box(::AreaSearchStatus::GeoRectangle* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.heatmap_bounding_box_);
  }
  _impl_.heatmap_bounding_box_ = reinterpret_cast<::AreaSearchStatus::GeoRectangle*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:AreaSearchStatus.AreaSearchStatus.heatmap_bounding_box)
}
inline ::AreaSearchStatus::GeoRectangle* AreaSearchStatus::release_heatmap_bounding_box() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::AreaSearchStatus::GeoRectangle* released = _impl_.heatmap_bounding_box_;
  _impl_.heatmap_bounding_box_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::AreaSearchStatus::GeoRectangle* AreaSearchStatus::unsafe_arena_release_heatmap_bounding_box() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:AreaSearchStatus.AreaSearchStatus.heatmap_bounding_box)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::AreaSearchStatus::GeoRectangle* temp = _impl_.heatmap_bounding_box_;
  _impl_.heatmap_bounding_box_ = nullptr;
  return temp;
}
inline ::AreaSearchStatus::GeoRectangle* AreaSearchStatus::_internal_mutable_heatmap_bounding_box() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.heatmap_bounding_box_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::AreaSearchStatus::GeoRectangle>(GetArena());
    _impl_.heatmap_bounding_box_ = reinterpret_cast<::AreaSearchStatus::GeoRectangle*>(p);
  }
  return _impl_.heatmap_bounding_box_;
}
inline ::AreaSearchStatus::GeoRectangle* AreaSearchStatus::mutable_heatmap_bounding_box() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::AreaSearchStatus::GeoRectangle* _msg = _internal_mutable_heatmap_bounding_box();
  // @@protoc_insertion_point(field_mutable:AreaSearchStatus.AreaSearchStatus.heatmap_bounding_box)
  return _msg;
}
inline void AreaSearchStatus::set_allocated_heatmap_bounding_box(::AreaSearchStatus::GeoRectangle* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.heatmap_bounding_box_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.heatmap_bounding_box_ = reinterpret_cast<::AreaSearchStatus::GeoRectangle*>(value);
  // @@protoc_insertion_point(field_set_allocated:AreaSearchStatus.AreaSearchStatus.heatmap_bounding_box)
}

// uint32 heatmap_height = 6;
inline void AreaSearchStatus::clear_heatmap_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.heatmap_height_ = 0u;
}
inline ::uint32_t AreaSearchStatus::heatmap_height() const {
  // @@protoc_insertion_point(field_get:AreaSearchStatus.AreaSearchStatus.heatmap_height)
  return _internal_heatmap_height();
}
inline void AreaSearchStatus::set_heatmap_height(::uint32_t value) {
  _internal_set_heatmap_height(value);
  // @@protoc_insertion_point(field_set:AreaSearchStatus.AreaSearchStatus.heatmap_height)
}
inline ::uint32_t AreaSearchStatus::_internal_heatmap_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.heatmap_height_;
}
inline void AreaSearchStatus::_internal_set_heatmap_height(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.heatmap_height_ = value;
}

// uint32 heatmap_width = 7;
inline void AreaSearchStatus::clear_heatmap_width() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.heatmap_width_ = 0u;
}
inline ::uint32_t AreaSearchStatus::heatmap_width() const {
  // @@protoc_insertion_point(field_get:AreaSearchStatus.AreaSearchStatus.heatmap_width)
  return _internal_heatmap_width();
}
inline void AreaSearchStatus::set_heatmap_width(::uint32_t value) {
  _internal_set_heatmap_width(value);
  // @@protoc_insertion_point(field_set:AreaSearchStatus.AreaSearchStatus.heatmap_width)
}
inline ::uint32_t AreaSearchStatus::_internal_heatmap_width() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.heatmap_width_;
}
inline void AreaSearchStatus::_internal_set_heatmap_width(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.heatmap_width_ = value;
}

// repeated uint32 heatmap_data = 8;
inline int AreaSearchStatus::_internal_heatmap_data_size() const {
  return _internal_heatmap_data().size();
}
inline int AreaSearchStatus::heatmap_data_size() const {
  return _internal_heatmap_data_size();
}
inline void AreaSearchStatus::clear_heatmap_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.heatmap_data_.Clear();
}
inline ::uint32_t AreaSearchStatus::heatmap_data(int index) const {
  // @@protoc_insertion_point(field_get:AreaSearchStatus.AreaSearchStatus.heatmap_data)
  return _internal_heatmap_data().Get(index);
}
inline void AreaSearchStatus::set_heatmap_data(int index, ::uint32_t value) {
  _internal_mutable_heatmap_data()->Set(index, value);
  // @@protoc_insertion_point(field_set:AreaSearchStatus.AreaSearchStatus.heatmap_data)
}
inline void AreaSearchStatus::add_heatmap_data(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_heatmap_data()->Add(value);
  // @@protoc_insertion_point(field_add:AreaSearchStatus.AreaSearchStatus.heatmap_data)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& AreaSearchStatus::heatmap_data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:AreaSearchStatus.AreaSearchStatus.heatmap_data)
  return _internal_heatmap_data();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* AreaSearchStatus::mutable_heatmap_data()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:AreaSearchStatus.AreaSearchStatus.heatmap_data)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_heatmap_data();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>&
AreaSearchStatus::_internal_heatmap_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.heatmap_data_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* AreaSearchStatus::_internal_mutable_heatmap_data() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.heatmap_data_;
}

// .AreaSearchStatus.GeometryKind_Enum active_geometry_type = 9;
inline bool AreaSearchStatus::has_active_geometry_type() const {
  return geo_case() == kActiveGeometryType;
}
inline void AreaSearchStatus::set_has_active_geometry_type() {
  _impl_._oneof_case_[0] = kActiveGeometryType;
}
inline void AreaSearchStatus::clear_active_geometry_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (geo_case() == kActiveGeometryType) {
    _impl_.geo_.active_geometry_type_ = 0;
    clear_has_geo();
  }
}
inline ::AreaSearchStatus::GeometryKind_Enum AreaSearchStatus::active_geometry_type() const {
  // @@protoc_insertion_point(field_get:AreaSearchStatus.AreaSearchStatus.active_geometry_type)
  return _internal_active_geometry_type();
}
inline void AreaSearchStatus::set_active_geometry_type(::AreaSearchStatus::GeometryKind_Enum value) {
  if (geo_case() != kActiveGeometryType) {
    clear_geo();
    set_has_active_geometry_type();
  }
  _impl_.geo_.active_geometry_type_ = value;
  // @@protoc_insertion_point(field_set:AreaSearchStatus.AreaSearchStatus.active_geometry_type)
}
inline ::AreaSearchStatus::GeometryKind_Enum AreaSearchStatus::_internal_active_geometry_type() const {
  if (geo_case() == kActiveGeometryType) {
    return static_cast<::AreaSearchStatus::GeometryKind_Enum>(_impl_.geo_.active_geometry_type_);
  }
  return static_cast<::AreaSearchStatus::GeometryKind_Enum>(0);
}

// .AreaSearchStatus.GeoPolygon polygon = 10;
inline bool AreaSearchStatus::has_polygon() const {
  return geo_case() == kPolygon;
}
inline bool AreaSearchStatus::_internal_has_polygon() const {
  return geo_case() == kPolygon;
}
inline void AreaSearchStatus::set_has_polygon() {
  _impl_._oneof_case_[0] = kPolygon;
}
inline void AreaSearchStatus::clear_polygon() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (geo_case() == kPolygon) {
    if (GetArena() == nullptr) {
      delete _impl_.geo_.polygon_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.geo_.polygon_);
    }
    clear_has_geo();
  }
}
inline ::AreaSearchStatus::GeoPolygon* AreaSearchStatus::release_polygon() {
  // @@protoc_insertion_point(field_release:AreaSearchStatus.AreaSearchStatus.polygon)
  if (geo_case() == kPolygon) {
    clear_has_geo();
    auto* temp = _impl_.geo_.polygon_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.geo_.polygon_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::AreaSearchStatus::GeoPolygon& AreaSearchStatus::_internal_polygon() const {
  return geo_case() == kPolygon ? *_impl_.geo_.polygon_ : reinterpret_cast<::AreaSearchStatus::GeoPolygon&>(::AreaSearchStatus::_GeoPolygon_default_instance_);
}
inline const ::AreaSearchStatus::GeoPolygon& AreaSearchStatus::polygon() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:AreaSearchStatus.AreaSearchStatus.polygon)
  return _internal_polygon();
}
inline ::AreaSearchStatus::GeoPolygon* AreaSearchStatus::unsafe_arena_release_polygon() {
  // @@protoc_insertion_point(field_unsafe_arena_release:AreaSearchStatus.AreaSearchStatus.polygon)
  if (geo_case() == kPolygon) {
    clear_has_geo();
    auto* temp = _impl_.geo_.polygon_;
    _impl_.geo_.polygon_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void AreaSearchStatus::unsafe_arena_set_allocated_polygon(::AreaSearchStatus::GeoPolygon* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_geo();
  if (value) {
    set_has_polygon();
    _impl_.geo_.polygon_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:AreaSearchStatus.AreaSearchStatus.polygon)
}
inline ::AreaSearchStatus::GeoPolygon* AreaSearchStatus::_internal_mutable_polygon() {
  if (geo_case() != kPolygon) {
    clear_geo();
    set_has_polygon();
    _impl_.geo_.polygon_ =
        ::google::protobuf::Message::DefaultConstruct<::AreaSearchStatus::GeoPolygon>(GetArena());
  }
  return _impl_.geo_.polygon_;
}
inline ::AreaSearchStatus::GeoPolygon* AreaSearchStatus::mutable_polygon() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::AreaSearchStatus::GeoPolygon* _msg = _internal_mutable_polygon();
  // @@protoc_insertion_point(field_mutable:AreaSearchStatus.AreaSearchStatus.polygon)
  return _msg;
}

// .AreaSearchStatus.GeoCircle circle = 11;
inline bool AreaSearchStatus::has_circle() const {
  return geo_case() == kCircle;
}
inline bool AreaSearchStatus::_internal_has_circle() const {
  return geo_case() == kCircle;
}
inline void AreaSearchStatus::set_has_circle() {
  _impl_._oneof_case_[0] = kCircle;
}
inline void AreaSearchStatus::clear_circle() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (geo_case() == kCircle) {
    if (GetArena() == nullptr) {
      delete _impl_.geo_.circle_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.geo_.circle_);
    }
    clear_has_geo();
  }
}
inline ::AreaSearchStatus::GeoCircle* AreaSearchStatus::release_circle() {
  // @@protoc_insertion_point(field_release:AreaSearchStatus.AreaSearchStatus.circle)
  if (geo_case() == kCircle) {
    clear_has_geo();
    auto* temp = _impl_.geo_.circle_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.geo_.circle_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::AreaSearchStatus::GeoCircle& AreaSearchStatus::_internal_circle() const {
  return geo_case() == kCircle ? *_impl_.geo_.circle_ : reinterpret_cast<::AreaSearchStatus::GeoCircle&>(::AreaSearchStatus::_GeoCircle_default_instance_);
}
inline const ::AreaSearchStatus::GeoCircle& AreaSearchStatus::circle() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:AreaSearchStatus.AreaSearchStatus.circle)
  return _internal_circle();
}
inline ::AreaSearchStatus::GeoCircle* AreaSearchStatus::unsafe_arena_release_circle() {
  // @@protoc_insertion_point(field_unsafe_arena_release:AreaSearchStatus.AreaSearchStatus.circle)
  if (geo_case() == kCircle) {
    clear_has_geo();
    auto* temp = _impl_.geo_.circle_;
    _impl_.geo_.circle_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void AreaSearchStatus::unsafe_arena_set_allocated_circle(::AreaSearchStatus::GeoCircle* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_geo();
  if (value) {
    set_has_circle();
    _impl_.geo_.circle_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:AreaSearchStatus.AreaSearchStatus.circle)
}
inline ::AreaSearchStatus::GeoCircle* AreaSearchStatus::_internal_mutable_circle() {
  if (geo_case() != kCircle) {
    clear_geo();
    set_has_circle();
    _impl_.geo_.circle_ =
        ::google::protobuf::Message::DefaultConstruct<::AreaSearchStatus::GeoCircle>(GetArena());
  }
  return _impl_.geo_.circle_;
}
inline ::AreaSearchStatus::GeoCircle* AreaSearchStatus::mutable_circle() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::AreaSearchStatus::GeoCircle* _msg = _internal_mutable_circle();
  // @@protoc_insertion_point(field_mutable:AreaSearchStatus.AreaSearchStatus.circle)
  return _msg;
}

inline bool AreaSearchStatus::has_geo() const {
  return geo_case() != GEO_NOT_SET;
}
inline void AreaSearchStatus::clear_has_geo() {
  _impl_._oneof_case_[0] = GEO_NOT_SET;
}
inline AreaSearchStatus::GeoCase AreaSearchStatus::geo_case() const {
  return AreaSearchStatus::GeoCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// GeoCircle

// double center = 1;
inline void GeoCircle::clear_center() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.center_ = 0;
}
inline double GeoCircle::center() const {
  // @@protoc_insertion_point(field_get:AreaSearchStatus.GeoCircle.center)
  return _internal_center();
}
inline void GeoCircle::set_center(double value) {
  _internal_set_center(value);
  // @@protoc_insertion_point(field_set:AreaSearchStatus.GeoCircle.center)
}
inline double GeoCircle::_internal_center() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.center_;
}
inline void GeoCircle::_internal_set_center(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.center_ = value;
}

// double radius_m = 2;
inline void GeoCircle::clear_radius_m() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.radius_m_ = 0;
}
inline double GeoCircle::radius_m() const {
  // @@protoc_insertion_point(field_get:AreaSearchStatus.GeoCircle.radius_m)
  return _internal_radius_m();
}
inline void GeoCircle::set_radius_m(double value) {
  _internal_set_radius_m(value);
  // @@protoc_insertion_point(field_set:AreaSearchStatus.GeoCircle.radius_m)
}
inline double GeoCircle::_internal_radius_m() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.radius_m_;
}
inline void GeoCircle::_internal_set_radius_m(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.radius_m_ = value;
}

// -------------------------------------------------------------------

// GeoPoint

// double latitude_deg = 1;
inline void GeoPoint::clear_latitude_deg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.latitude_deg_ = 0;
}
inline double GeoPoint::latitude_deg() const {
  // @@protoc_insertion_point(field_get:AreaSearchStatus.GeoPoint.latitude_deg)
  return _internal_latitude_deg();
}
inline void GeoPoint::set_latitude_deg(double value) {
  _internal_set_latitude_deg(value);
  // @@protoc_insertion_point(field_set:AreaSearchStatus.GeoPoint.latitude_deg)
}
inline double GeoPoint::_internal_latitude_deg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.latitude_deg_;
}
inline void GeoPoint::_internal_set_latitude_deg(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.latitude_deg_ = value;
}

// double longitude_deg = 2;
inline void GeoPoint::clear_longitude_deg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.longitude_deg_ = 0;
}
inline double GeoPoint::longitude_deg() const {
  // @@protoc_insertion_point(field_get:AreaSearchStatus.GeoPoint.longitude_deg)
  return _internal_longitude_deg();
}
inline void GeoPoint::set_longitude_deg(double value) {
  _internal_set_longitude_deg(value);
  // @@protoc_insertion_point(field_set:AreaSearchStatus.GeoPoint.longitude_deg)
}
inline double GeoPoint::_internal_longitude_deg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.longitude_deg_;
}
inline void GeoPoint::_internal_set_longitude_deg(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.longitude_deg_ = value;
}

// double altitude_msl_m = 3;
inline void GeoPoint::clear_altitude_msl_m() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.altitude_msl_m_ = 0;
}
inline double GeoPoint::altitude_msl_m() const {
  // @@protoc_insertion_point(field_get:AreaSearchStatus.GeoPoint.altitude_msl_m)
  return _internal_altitude_msl_m();
}
inline void GeoPoint::set_altitude_msl_m(double value) {
  _internal_set_altitude_msl_m(value);
  // @@protoc_insertion_point(field_set:AreaSearchStatus.GeoPoint.altitude_msl_m)
}
inline double GeoPoint::_internal_altitude_msl_m() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.altitude_msl_m_;
}
inline void GeoPoint::_internal_set_altitude_msl_m(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.altitude_msl_m_ = value;
}

// -------------------------------------------------------------------

// GeoPolygon

// double bounding_points = 1;
inline void GeoPolygon::clear_bounding_points() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bounding_points_ = 0;
}
inline double GeoPolygon::bounding_points() const {
  // @@protoc_insertion_point(field_get:AreaSearchStatus.GeoPolygon.bounding_points)
  return _internal_bounding_points();
}
inline void GeoPolygon::set_bounding_points(double value) {
  _internal_set_bounding_points(value);
  // @@protoc_insertion_point(field_set:AreaSearchStatus.GeoPolygon.bounding_points)
}
inline double GeoPolygon::_internal_bounding_points() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bounding_points_;
}
inline void GeoPolygon::_internal_set_bounding_points(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bounding_points_ = value;
}

// -------------------------------------------------------------------

// GeoRectangle

// .AreaSearchStatus.GeoPoint upper_left_point = 1;
inline bool GeoRectangle::has_upper_left_point() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.upper_left_point_ != nullptr);
  return value;
}
inline void GeoRectangle::clear_upper_left_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.upper_left_point_ != nullptr) _impl_.upper_left_point_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::AreaSearchStatus::GeoPoint& GeoRectangle::_internal_upper_left_point() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::AreaSearchStatus::GeoPoint* p = _impl_.upper_left_point_;
  return p != nullptr ? *p : reinterpret_cast<const ::AreaSearchStatus::GeoPoint&>(::AreaSearchStatus::_GeoPoint_default_instance_);
}
inline const ::AreaSearchStatus::GeoPoint& GeoRectangle::upper_left_point() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:AreaSearchStatus.GeoRectangle.upper_left_point)
  return _internal_upper_left_point();
}
inline void GeoRectangle::unsafe_arena_set_allocated_upper_left_point(::AreaSearchStatus::GeoPoint* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.upper_left_point_);
  }
  _impl_.upper_left_point_ = reinterpret_cast<::AreaSearchStatus::GeoPoint*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:AreaSearchStatus.GeoRectangle.upper_left_point)
}
inline ::AreaSearchStatus::GeoPoint* GeoRectangle::release_upper_left_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::AreaSearchStatus::GeoPoint* released = _impl_.upper_left_point_;
  _impl_.upper_left_point_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::AreaSearchStatus::GeoPoint* GeoRectangle::unsafe_arena_release_upper_left_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:AreaSearchStatus.GeoRectangle.upper_left_point)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::AreaSearchStatus::GeoPoint* temp = _impl_.upper_left_point_;
  _impl_.upper_left_point_ = nullptr;
  return temp;
}
inline ::AreaSearchStatus::GeoPoint* GeoRectangle::_internal_mutable_upper_left_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.upper_left_point_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::AreaSearchStatus::GeoPoint>(GetArena());
    _impl_.upper_left_point_ = reinterpret_cast<::AreaSearchStatus::GeoPoint*>(p);
  }
  return _impl_.upper_left_point_;
}
inline ::AreaSearchStatus::GeoPoint* GeoRectangle::mutable_upper_left_point() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::AreaSearchStatus::GeoPoint* _msg = _internal_mutable_upper_left_point();
  // @@protoc_insertion_point(field_mutable:AreaSearchStatus.GeoRectangle.upper_left_point)
  return _msg;
}
inline void GeoRectangle::set_allocated_upper_left_point(::AreaSearchStatus::GeoPoint* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.upper_left_point_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.upper_left_point_ = reinterpret_cast<::AreaSearchStatus::GeoPoint*>(value);
  // @@protoc_insertion_point(field_set_allocated:AreaSearchStatus.GeoRectangle.upper_left_point)
}

// .AreaSearchStatus.GeoPoint bottom_right_point = 2;
inline bool GeoRectangle::has_bottom_right_point() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.bottom_right_point_ != nullptr);
  return value;
}
inline void GeoRectangle::clear_bottom_right_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.bottom_right_point_ != nullptr) _impl_.bottom_right_point_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::AreaSearchStatus::GeoPoint& GeoRectangle::_internal_bottom_right_point() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::AreaSearchStatus::GeoPoint* p = _impl_.bottom_right_point_;
  return p != nullptr ? *p : reinterpret_cast<const ::AreaSearchStatus::GeoPoint&>(::AreaSearchStatus::_GeoPoint_default_instance_);
}
inline const ::AreaSearchStatus::GeoPoint& GeoRectangle::bottom_right_point() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:AreaSearchStatus.GeoRectangle.bottom_right_point)
  return _internal_bottom_right_point();
}
inline void GeoRectangle::unsafe_arena_set_allocated_bottom_right_point(::AreaSearchStatus::GeoPoint* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.bottom_right_point_);
  }
  _impl_.bottom_right_point_ = reinterpret_cast<::AreaSearchStatus::GeoPoint*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:AreaSearchStatus.GeoRectangle.bottom_right_point)
}
inline ::AreaSearchStatus::GeoPoint* GeoRectangle::release_bottom_right_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::AreaSearchStatus::GeoPoint* released = _impl_.bottom_right_point_;
  _impl_.bottom_right_point_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::AreaSearchStatus::GeoPoint* GeoRectangle::unsafe_arena_release_bottom_right_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:AreaSearchStatus.GeoRectangle.bottom_right_point)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::AreaSearchStatus::GeoPoint* temp = _impl_.bottom_right_point_;
  _impl_.bottom_right_point_ = nullptr;
  return temp;
}
inline ::AreaSearchStatus::GeoPoint* GeoRectangle::_internal_mutable_bottom_right_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.bottom_right_point_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::AreaSearchStatus::GeoPoint>(GetArena());
    _impl_.bottom_right_point_ = reinterpret_cast<::AreaSearchStatus::GeoPoint*>(p);
  }
  return _impl_.bottom_right_point_;
}
inline ::AreaSearchStatus::GeoPoint* GeoRectangle::mutable_bottom_right_point() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::AreaSearchStatus::GeoPoint* _msg = _internal_mutable_bottom_right_point();
  // @@protoc_insertion_point(field_mutable:AreaSearchStatus.GeoRectangle.bottom_right_point)
  return _msg;
}
inline void GeoRectangle::set_allocated_bottom_right_point(::AreaSearchStatus::GeoPoint* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.bottom_right_point_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.bottom_right_point_ = reinterpret_cast<::AreaSearchStatus::GeoPoint*>(value);
  // @@protoc_insertion_point(field_set_allocated:AreaSearchStatus.GeoRectangle.bottom_right_point)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace AreaSearchStatus


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::AreaSearchStatus::GeometryKind_Enum> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::AreaSearchStatus::GeometryKind_Enum>() {
  return ::AreaSearchStatus::GeometryKind_Enum_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // AreaSearchStatus_2eproto_2epb_2eh
