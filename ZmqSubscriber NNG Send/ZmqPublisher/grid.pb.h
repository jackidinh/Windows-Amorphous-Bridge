// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: grid.proto
// Protobuf C++ Version: 5.29.3

#ifndef grid_2eproto_2epb_2eh
#define grid_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_grid_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_grid_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_grid_2eproto;
namespace grid {
class ShapeDetails;
struct ShapeDetailsDefaultTypeInternal;
extern ShapeDetailsDefaultTypeInternal _ShapeDetails_default_instance_;
class Shapes;
struct ShapesDefaultTypeInternal;
extern ShapesDefaultTypeInternal _Shapes_default_instance_;
class Square;
struct SquareDefaultTypeInternal;
extern SquareDefaultTypeInternal _Square_default_instance_;
class Star;
struct StarDefaultTypeInternal;
extern StarDefaultTypeInternal _Star_default_instance_;
}  // namespace grid
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace grid {

// ===================================================================


// -------------------------------------------------------------------

class ShapeDetails final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:grid.ShapeDetails) */ {
 public:
  inline ShapeDetails() : ShapeDetails(nullptr) {}
  ~ShapeDetails() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ShapeDetails* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ShapeDetails));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ShapeDetails(
      ::google::protobuf::internal::ConstantInitialized);

  inline ShapeDetails(const ShapeDetails& from) : ShapeDetails(nullptr, from) {}
  inline ShapeDetails(ShapeDetails&& from) noexcept
      : ShapeDetails(nullptr, std::move(from)) {}
  inline ShapeDetails& operator=(const ShapeDetails& from) {
    CopyFrom(from);
    return *this;
  }
  inline ShapeDetails& operator=(ShapeDetails&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ShapeDetails& default_instance() {
    return *internal_default_instance();
  }
  static inline const ShapeDetails* internal_default_instance() {
    return reinterpret_cast<const ShapeDetails*>(
        &_ShapeDetails_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(ShapeDetails& a, ShapeDetails& b) { a.Swap(&b); }
  inline void Swap(ShapeDetails* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ShapeDetails* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ShapeDetails* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ShapeDetails>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ShapeDetails& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ShapeDetails& from) { ShapeDetails::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ShapeDetails* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "grid.ShapeDetails"; }

 protected:
  explicit ShapeDetails(::google::protobuf::Arena* arena);
  ShapeDetails(::google::protobuf::Arena* arena, const ShapeDetails& from);
  ShapeDetails(::google::protobuf::Arena* arena, ShapeDetails&& from) noexcept
      : ShapeDetails(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kWidthFieldNumber = 1,
    kHeightFieldNumber = 2,
    kLengthFieldNumber = 3,
  };
  // double width = 1;
  void clear_width() ;
  double width() const;
  void set_width(double value);

  private:
  double _internal_width() const;
  void _internal_set_width(double value);

  public:
  // double height = 2;
  void clear_height() ;
  double height() const;
  void set_height(double value);

  private:
  double _internal_height() const;
  void _internal_set_height(double value);

  public:
  // double length = 3;
  void clear_length() ;
  double length() const;
  void set_length(double value);

  private:
  double _internal_length() const;
  void _internal_set_length(double value);

  public:
  // @@protoc_insertion_point(class_scope:grid.ShapeDetails)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ShapeDetails& from_msg);
    double width_;
    double height_;
    double length_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_grid_2eproto;
};
// -------------------------------------------------------------------

class Star final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:grid.Star) */ {
 public:
  inline Star() : Star(nullptr) {}
  ~Star() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Star* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Star));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Star(
      ::google::protobuf::internal::ConstantInitialized);

  inline Star(const Star& from) : Star(nullptr, from) {}
  inline Star(Star&& from) noexcept
      : Star(nullptr, std::move(from)) {}
  inline Star& operator=(const Star& from) {
    CopyFrom(from);
    return *this;
  }
  inline Star& operator=(Star&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Star& default_instance() {
    return *internal_default_instance();
  }
  static inline const Star* internal_default_instance() {
    return reinterpret_cast<const Star*>(
        &_Star_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Star& a, Star& b) { a.Swap(&b); }
  inline void Swap(Star* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Star* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Star* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Star>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Star& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Star& from) { Star::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Star* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "grid.Star"; }

 protected:
  explicit Star(::google::protobuf::Arena* arena);
  Star(::google::protobuf::Arena* arena, const Star& from);
  Star(::google::protobuf::Arena* arena, Star&& from) noexcept
      : Star(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStarDetailsFieldNumber = 1,
  };
  // repeated .grid.ShapeDetails star_details = 1;
  int star_details_size() const;
  private:
  int _internal_star_details_size() const;

  public:
  void clear_star_details() ;
  ::grid::ShapeDetails* mutable_star_details(int index);
  ::google::protobuf::RepeatedPtrField<::grid::ShapeDetails>* mutable_star_details();

  private:
  const ::google::protobuf::RepeatedPtrField<::grid::ShapeDetails>& _internal_star_details() const;
  ::google::protobuf::RepeatedPtrField<::grid::ShapeDetails>* _internal_mutable_star_details();
  public:
  const ::grid::ShapeDetails& star_details(int index) const;
  ::grid::ShapeDetails* add_star_details();
  const ::google::protobuf::RepeatedPtrField<::grid::ShapeDetails>& star_details() const;
  // @@protoc_insertion_point(class_scope:grid.Star)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Star& from_msg);
    ::google::protobuf::RepeatedPtrField< ::grid::ShapeDetails > star_details_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_grid_2eproto;
};
// -------------------------------------------------------------------

class Square final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:grid.Square) */ {
 public:
  inline Square() : Square(nullptr) {}
  ~Square() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Square* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Square));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Square(
      ::google::protobuf::internal::ConstantInitialized);

  inline Square(const Square& from) : Square(nullptr, from) {}
  inline Square(Square&& from) noexcept
      : Square(nullptr, std::move(from)) {}
  inline Square& operator=(const Square& from) {
    CopyFrom(from);
    return *this;
  }
  inline Square& operator=(Square&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Square& default_instance() {
    return *internal_default_instance();
  }
  static inline const Square* internal_default_instance() {
    return reinterpret_cast<const Square*>(
        &_Square_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(Square& a, Square& b) { a.Swap(&b); }
  inline void Swap(Square* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Square* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Square* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Square>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Square& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Square& from) { Square::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Square* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "grid.Square"; }

 protected:
  explicit Square(::google::protobuf::Arena* arena);
  Square(::google::protobuf::Arena* arena, const Square& from);
  Square(::google::protobuf::Arena* arena, Square&& from) noexcept
      : Square(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSquareDetailsFieldNumber = 1,
    kNumberOfSquaresFieldNumber = 2,
  };
  // .grid.ShapeDetails square_details = 1;
  bool has_square_details() const;
  void clear_square_details() ;
  const ::grid::ShapeDetails& square_details() const;
  PROTOBUF_NODISCARD ::grid::ShapeDetails* release_square_details();
  ::grid::ShapeDetails* mutable_square_details();
  void set_allocated_square_details(::grid::ShapeDetails* value);
  void unsafe_arena_set_allocated_square_details(::grid::ShapeDetails* value);
  ::grid::ShapeDetails* unsafe_arena_release_square_details();

  private:
  const ::grid::ShapeDetails& _internal_square_details() const;
  ::grid::ShapeDetails* _internal_mutable_square_details();

  public:
  // double number_of_squares = 2;
  void clear_number_of_squares() ;
  double number_of_squares() const;
  void set_number_of_squares(double value);

  private:
  double _internal_number_of_squares() const;
  void _internal_set_number_of_squares(double value);

  public:
  // @@protoc_insertion_point(class_scope:grid.Square)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Square& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::grid::ShapeDetails* square_details_;
    double number_of_squares_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_grid_2eproto;
};
// -------------------------------------------------------------------

class Shapes final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:grid.Shapes) */ {
 public:
  inline Shapes() : Shapes(nullptr) {}
  ~Shapes() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Shapes* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Shapes));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Shapes(
      ::google::protobuf::internal::ConstantInitialized);

  inline Shapes(const Shapes& from) : Shapes(nullptr, from) {}
  inline Shapes(Shapes&& from) noexcept
      : Shapes(nullptr, std::move(from)) {}
  inline Shapes& operator=(const Shapes& from) {
    CopyFrom(from);
    return *this;
  }
  inline Shapes& operator=(Shapes&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Shapes& default_instance() {
    return *internal_default_instance();
  }
  static inline const Shapes* internal_default_instance() {
    return reinterpret_cast<const Shapes*>(
        &_Shapes_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(Shapes& a, Shapes& b) { a.Swap(&b); }
  inline void Swap(Shapes* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Shapes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Shapes* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Shapes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Shapes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Shapes& from) { Shapes::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Shapes* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "grid.Shapes"; }

 protected:
  explicit Shapes(::google::protobuf::Arena* arena);
  Shapes(::google::protobuf::Arena* arena, const Shapes& from);
  Shapes(::google::protobuf::Arena* arena, Shapes&& from) noexcept
      : Shapes(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kManyShapesFieldNumber = 1,
  };
  // repeated .grid.ShapeDetails many_shapes = 1;
  int many_shapes_size() const;
  private:
  int _internal_many_shapes_size() const;

  public:
  void clear_many_shapes() ;
  ::grid::ShapeDetails* mutable_many_shapes(int index);
  ::google::protobuf::RepeatedPtrField<::grid::ShapeDetails>* mutable_many_shapes();

  private:
  const ::google::protobuf::RepeatedPtrField<::grid::ShapeDetails>& _internal_many_shapes() const;
  ::google::protobuf::RepeatedPtrField<::grid::ShapeDetails>* _internal_mutable_many_shapes();
  public:
  const ::grid::ShapeDetails& many_shapes(int index) const;
  ::grid::ShapeDetails* add_many_shapes();
  const ::google::protobuf::RepeatedPtrField<::grid::ShapeDetails>& many_shapes() const;
  // @@protoc_insertion_point(class_scope:grid.Shapes)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Shapes& from_msg);
    ::google::protobuf::RepeatedPtrField< ::grid::ShapeDetails > many_shapes_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_grid_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ShapeDetails

// double width = 1;
inline void ShapeDetails::clear_width() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.width_ = 0;
}
inline double ShapeDetails::width() const {
  // @@protoc_insertion_point(field_get:grid.ShapeDetails.width)
  return _internal_width();
}
inline void ShapeDetails::set_width(double value) {
  _internal_set_width(value);
  // @@protoc_insertion_point(field_set:grid.ShapeDetails.width)
}
inline double ShapeDetails::_internal_width() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.width_;
}
inline void ShapeDetails::_internal_set_width(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.width_ = value;
}

// double height = 2;
inline void ShapeDetails::clear_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = 0;
}
inline double ShapeDetails::height() const {
  // @@protoc_insertion_point(field_get:grid.ShapeDetails.height)
  return _internal_height();
}
inline void ShapeDetails::set_height(double value) {
  _internal_set_height(value);
  // @@protoc_insertion_point(field_set:grid.ShapeDetails.height)
}
inline double ShapeDetails::_internal_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.height_;
}
inline void ShapeDetails::_internal_set_height(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = value;
}

// double length = 3;
inline void ShapeDetails::clear_length() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.length_ = 0;
}
inline double ShapeDetails::length() const {
  // @@protoc_insertion_point(field_get:grid.ShapeDetails.length)
  return _internal_length();
}
inline void ShapeDetails::set_length(double value) {
  _internal_set_length(value);
  // @@protoc_insertion_point(field_set:grid.ShapeDetails.length)
}
inline double ShapeDetails::_internal_length() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.length_;
}
inline void ShapeDetails::_internal_set_length(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.length_ = value;
}

// -------------------------------------------------------------------

// Star

// repeated .grid.ShapeDetails star_details = 1;
inline int Star::_internal_star_details_size() const {
  return _internal_star_details().size();
}
inline int Star::star_details_size() const {
  return _internal_star_details_size();
}
inline void Star::clear_star_details() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.star_details_.Clear();
}
inline ::grid::ShapeDetails* Star::mutable_star_details(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:grid.Star.star_details)
  return _internal_mutable_star_details()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::grid::ShapeDetails>* Star::mutable_star_details()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:grid.Star.star_details)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_star_details();
}
inline const ::grid::ShapeDetails& Star::star_details(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:grid.Star.star_details)
  return _internal_star_details().Get(index);
}
inline ::grid::ShapeDetails* Star::add_star_details() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::grid::ShapeDetails* _add = _internal_mutable_star_details()->Add();
  // @@protoc_insertion_point(field_add:grid.Star.star_details)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::grid::ShapeDetails>& Star::star_details() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:grid.Star.star_details)
  return _internal_star_details();
}
inline const ::google::protobuf::RepeatedPtrField<::grid::ShapeDetails>&
Star::_internal_star_details() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.star_details_;
}
inline ::google::protobuf::RepeatedPtrField<::grid::ShapeDetails>*
Star::_internal_mutable_star_details() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.star_details_;
}

// -------------------------------------------------------------------

// Square

// .grid.ShapeDetails square_details = 1;
inline bool Square::has_square_details() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.square_details_ != nullptr);
  return value;
}
inline void Square::clear_square_details() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.square_details_ != nullptr) _impl_.square_details_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::grid::ShapeDetails& Square::_internal_square_details() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::grid::ShapeDetails* p = _impl_.square_details_;
  return p != nullptr ? *p : reinterpret_cast<const ::grid::ShapeDetails&>(::grid::_ShapeDetails_default_instance_);
}
inline const ::grid::ShapeDetails& Square::square_details() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:grid.Square.square_details)
  return _internal_square_details();
}
inline void Square::unsafe_arena_set_allocated_square_details(::grid::ShapeDetails* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.square_details_);
  }
  _impl_.square_details_ = reinterpret_cast<::grid::ShapeDetails*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:grid.Square.square_details)
}
inline ::grid::ShapeDetails* Square::release_square_details() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::grid::ShapeDetails* released = _impl_.square_details_;
  _impl_.square_details_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::grid::ShapeDetails* Square::unsafe_arena_release_square_details() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:grid.Square.square_details)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::grid::ShapeDetails* temp = _impl_.square_details_;
  _impl_.square_details_ = nullptr;
  return temp;
}
inline ::grid::ShapeDetails* Square::_internal_mutable_square_details() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.square_details_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::grid::ShapeDetails>(GetArena());
    _impl_.square_details_ = reinterpret_cast<::grid::ShapeDetails*>(p);
  }
  return _impl_.square_details_;
}
inline ::grid::ShapeDetails* Square::mutable_square_details() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::grid::ShapeDetails* _msg = _internal_mutable_square_details();
  // @@protoc_insertion_point(field_mutable:grid.Square.square_details)
  return _msg;
}
inline void Square::set_allocated_square_details(::grid::ShapeDetails* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.square_details_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.square_details_ = reinterpret_cast<::grid::ShapeDetails*>(value);
  // @@protoc_insertion_point(field_set_allocated:grid.Square.square_details)
}

// double number_of_squares = 2;
inline void Square::clear_number_of_squares() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.number_of_squares_ = 0;
}
inline double Square::number_of_squares() const {
  // @@protoc_insertion_point(field_get:grid.Square.number_of_squares)
  return _internal_number_of_squares();
}
inline void Square::set_number_of_squares(double value) {
  _internal_set_number_of_squares(value);
  // @@protoc_insertion_point(field_set:grid.Square.number_of_squares)
}
inline double Square::_internal_number_of_squares() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.number_of_squares_;
}
inline void Square::_internal_set_number_of_squares(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.number_of_squares_ = value;
}

// -------------------------------------------------------------------

// Shapes

// repeated .grid.ShapeDetails many_shapes = 1;
inline int Shapes::_internal_many_shapes_size() const {
  return _internal_many_shapes().size();
}
inline int Shapes::many_shapes_size() const {
  return _internal_many_shapes_size();
}
inline void Shapes::clear_many_shapes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.many_shapes_.Clear();
}
inline ::grid::ShapeDetails* Shapes::mutable_many_shapes(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:grid.Shapes.many_shapes)
  return _internal_mutable_many_shapes()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::grid::ShapeDetails>* Shapes::mutable_many_shapes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:grid.Shapes.many_shapes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_many_shapes();
}
inline const ::grid::ShapeDetails& Shapes::many_shapes(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:grid.Shapes.many_shapes)
  return _internal_many_shapes().Get(index);
}
inline ::grid::ShapeDetails* Shapes::add_many_shapes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::grid::ShapeDetails* _add = _internal_mutable_many_shapes()->Add();
  // @@protoc_insertion_point(field_add:grid.Shapes.many_shapes)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::grid::ShapeDetails>& Shapes::many_shapes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:grid.Shapes.many_shapes)
  return _internal_many_shapes();
}
inline const ::google::protobuf::RepeatedPtrField<::grid::ShapeDetails>&
Shapes::_internal_many_shapes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.many_shapes_;
}
inline ::google::protobuf::RepeatedPtrField<::grid::ShapeDetails>*
Shapes::_internal_mutable_many_shapes() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.many_shapes_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace grid


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // grid_2eproto_2epb_2eh
