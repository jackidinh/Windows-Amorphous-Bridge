// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file GeoPoint.hpp
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool fastddsgen.
 */

#ifndef FAST_DDS_GENERATED__TEST_MSGS_PKG_MSG_GEOPOINT_HPP
#define FAST_DDS_GENERATED__TEST_MSGS_PKG_MSG_GEOPOINT_HPP

#include <cstdint>
#include <utility>

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#define eProsima_user_DllExport __declspec( dllexport )
#else
#define eProsima_user_DllExport
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define eProsima_user_DllExport
#endif  // _WIN32

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#if defined(GEOPOINT_SOURCE)
#define GEOPOINT_DllAPI __declspec( dllexport )
#else
#define GEOPOINT_DllAPI __declspec( dllimport )
#endif // GEOPOINT_SOURCE
#else
#define GEOPOINT_DllAPI
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define GEOPOINT_DllAPI
#endif // _WIN32

namespace test_msgs_pkg {

namespace msg {

/*!
 * @brief This class represents the structure GeoPoint defined by the user in the IDL file.
 * @ingroup GeoPoint
 */
class GeoPoint
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport GeoPoint()
    {
    }

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~GeoPoint()
    {
    }

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object GeoPoint that will be copied.
     */
    eProsima_user_DllExport GeoPoint(
            const GeoPoint& x)
    {
                    m_latitude_deg = x.m_latitude_deg;

                    m_longitude_deg = x.m_longitude_deg;

                    m_altitude_msl_m = x.m_altitude_msl_m;

    }

    /*!
     * @brief Move constructor.
     * @param x Reference to the object GeoPoint that will be copied.
     */
    eProsima_user_DllExport GeoPoint(
            GeoPoint&& x) noexcept
    {
        m_latitude_deg = x.m_latitude_deg;
        m_longitude_deg = x.m_longitude_deg;
        m_altitude_msl_m = x.m_altitude_msl_m;
    }

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object GeoPoint that will be copied.
     */
    eProsima_user_DllExport GeoPoint& operator =(
            const GeoPoint& x)
    {

                    m_latitude_deg = x.m_latitude_deg;

                    m_longitude_deg = x.m_longitude_deg;

                    m_altitude_msl_m = x.m_altitude_msl_m;

        return *this;
    }

    /*!
     * @brief Move assignment.
     * @param x Reference to the object GeoPoint that will be copied.
     */
    eProsima_user_DllExport GeoPoint& operator =(
            GeoPoint&& x) noexcept
    {

        m_latitude_deg = x.m_latitude_deg;
        m_longitude_deg = x.m_longitude_deg;
        m_altitude_msl_m = x.m_altitude_msl_m;
        return *this;
    }

    /*!
     * @brief Comparison operator.
     * @param x GeoPoint object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const GeoPoint& x) const
    {
        return (m_latitude_deg == x.m_latitude_deg &&
           m_longitude_deg == x.m_longitude_deg &&
           m_altitude_msl_m == x.m_altitude_msl_m);
    }

    /*!
     * @brief Comparison operator.
     * @param x GeoPoint object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const GeoPoint& x) const
    {
        return !(*this == x);
    }

    /*!
     * @brief This function sets a value in member latitude_deg
     * @param _latitude_deg New value for member latitude_deg
     */
    eProsima_user_DllExport void latitude_deg(
            double _latitude_deg)
    {
        m_latitude_deg = _latitude_deg;
    }

    /*!
     * @brief This function returns the value of member latitude_deg
     * @return Value of member latitude_deg
     */
    eProsima_user_DllExport double latitude_deg() const
    {
        return m_latitude_deg;
    }

    /*!
     * @brief This function returns a reference to member latitude_deg
     * @return Reference to member latitude_deg
     */
    eProsima_user_DllExport double& latitude_deg()
    {
        return m_latitude_deg;
    }


    /*!
     * @brief This function sets a value in member longitude_deg
     * @param _longitude_deg New value for member longitude_deg
     */
    eProsima_user_DllExport void longitude_deg(
            double _longitude_deg)
    {
        m_longitude_deg = _longitude_deg;
    }

    /*!
     * @brief This function returns the value of member longitude_deg
     * @return Value of member longitude_deg
     */
    eProsima_user_DllExport double longitude_deg() const
    {
        return m_longitude_deg;
    }

    /*!
     * @brief This function returns a reference to member longitude_deg
     * @return Reference to member longitude_deg
     */
    eProsima_user_DllExport double& longitude_deg()
    {
        return m_longitude_deg;
    }


    /*!
     * @brief This function sets a value in member altitude_msl_m
     * @param _altitude_msl_m New value for member altitude_msl_m
     */
    eProsima_user_DllExport void altitude_msl_m(
            double _altitude_msl_m)
    {
        m_altitude_msl_m = _altitude_msl_m;
    }

    /*!
     * @brief This function returns the value of member altitude_msl_m
     * @return Value of member altitude_msl_m
     */
    eProsima_user_DllExport double altitude_msl_m() const
    {
        return m_altitude_msl_m;
    }

    /*!
     * @brief This function returns a reference to member altitude_msl_m
     * @return Reference to member altitude_msl_m
     */
    eProsima_user_DllExport double& altitude_msl_m()
    {
        return m_altitude_msl_m;
    }



private:

    double m_latitude_deg{0.0};
    double m_longitude_deg{0.0};
    double m_altitude_msl_m{0.0};

};

} // namespace msg

} // namespace test_msgs_pkg

#endif // _FAST_DDS_GENERATED_TEST_MSGS_PKG_MSG_GEOPOINT_HPP_


