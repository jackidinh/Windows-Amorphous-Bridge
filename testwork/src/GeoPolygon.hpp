// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file GeoPolygon.hpp
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool fastddsgen.
 */

#ifndef FAST_DDS_GENERATED__TEST_MSGS_PKG_MSG_GEOPOLYGON_HPP
#define FAST_DDS_GENERATED__TEST_MSGS_PKG_MSG_GEOPOLYGON_HPP

#include <cstdint>
#include <utility>

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#define eProsima_user_DllExport __declspec( dllexport )
#else
#define eProsima_user_DllExport
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define eProsima_user_DllExport
#endif  // _WIN32

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#if defined(GEOPOLYGON_SOURCE)
#define GEOPOLYGON_DllAPI __declspec( dllexport )
#else
#define GEOPOLYGON_DllAPI __declspec( dllimport )
#endif // GEOPOLYGON_SOURCE
#else
#define GEOPOLYGON_DllAPI
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define GEOPOLYGON_DllAPI
#endif // _WIN32

namespace test_msgs_pkg {

namespace msg {

/*!
 * @brief This class represents the structure GeoPolygon defined by the user in the IDL file.
 * @ingroup GeoPolygon
 */
class GeoPolygon
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport GeoPolygon()
    {
    }

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~GeoPolygon()
    {
    }

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object GeoPolygon that will be copied.
     */
    eProsima_user_DllExport GeoPolygon(
            const GeoPolygon& x)
    {
                    m_bounding_points = x.m_bounding_points;

    }

    /*!
     * @brief Move constructor.
     * @param x Reference to the object GeoPolygon that will be copied.
     */
    eProsima_user_DllExport GeoPolygon(
            GeoPolygon&& x) noexcept
    {
        m_bounding_points = x.m_bounding_points;
    }

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object GeoPolygon that will be copied.
     */
    eProsima_user_DllExport GeoPolygon& operator =(
            const GeoPolygon& x)
    {

                    m_bounding_points = x.m_bounding_points;

        return *this;
    }

    /*!
     * @brief Move assignment.
     * @param x Reference to the object GeoPolygon that will be copied.
     */
    eProsima_user_DllExport GeoPolygon& operator =(
            GeoPolygon&& x) noexcept
    {

        m_bounding_points = x.m_bounding_points;
        return *this;
    }

    /*!
     * @brief Comparison operator.
     * @param x GeoPolygon object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const GeoPolygon& x) const
    {
        return (m_bounding_points == x.m_bounding_points);
    }

    /*!
     * @brief Comparison operator.
     * @param x GeoPolygon object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const GeoPolygon& x) const
    {
        return !(*this == x);
    }

    /*!
     * @brief This function sets a value in member bounding_points
     * @param _bounding_points New value for member bounding_points
     */
    eProsima_user_DllExport void bounding_points(
            double _bounding_points)
    {
        m_bounding_points = _bounding_points;
    }

    /*!
     * @brief This function returns the value of member bounding_points
     * @return Value of member bounding_points
     */
    eProsima_user_DllExport double bounding_points() const
    {
        return m_bounding_points;
    }

    /*!
     * @brief This function returns a reference to member bounding_points
     * @return Reference to member bounding_points
     */
    eProsima_user_DllExport double& bounding_points()
    {
        return m_bounding_points;
    }



private:

    double m_bounding_points{0.0};

};

} // namespace msg

} // namespace test_msgs_pkg

#endif // _FAST_DDS_GENERATED_TEST_MSGS_PKG_MSG_GEOPOLYGON_HPP_


