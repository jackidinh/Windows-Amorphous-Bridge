// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: AreaSearchStatus.proto
// Protobuf C++ Version: 5.29.3

#include "AreaSearchStatus.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace AreaSearchStatus {

inline constexpr GeoPolygon::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : bounding_points_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GeoPolygon::GeoPolygon(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GeoPolygonDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GeoPolygonDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GeoPolygonDefaultTypeInternal() {}
  union {
    GeoPolygon _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GeoPolygonDefaultTypeInternal _GeoPolygon_default_instance_;

inline constexpr GeoPoint::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : latitude_deg_{0},
        longitude_deg_{0},
        altitude_msl_m_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GeoPoint::GeoPoint(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GeoPointDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GeoPointDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GeoPointDefaultTypeInternal() {}
  union {
    GeoPoint _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GeoPointDefaultTypeInternal _GeoPoint_default_instance_;

inline constexpr GeoCircle::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : center_{0},
        radius_m_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GeoCircle::GeoCircle(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GeoCircleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GeoCircleDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GeoCircleDefaultTypeInternal() {}
  union {
    GeoCircle _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GeoCircleDefaultTypeInternal _GeoCircle_default_instance_;

inline constexpr GeoRectangle::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        upper_left_point_{nullptr},
        bottom_right_point_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GeoRectangle::GeoRectangle(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GeoRectangleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GeoRectangleDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GeoRectangleDefaultTypeInternal() {}
  union {
    GeoRectangle _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GeoRectangleDefaultTypeInternal _GeoRectangle_default_instance_;

inline constexpr AreaSearchStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        heatmap_data_{},
        _heatmap_data_cached_byte_size_{0},
        heatmap_bounding_box_{nullptr},
        vehicle_id_{::uint64_t{0u}},
        timestamp_epoch_usec_{::uint64_t{0u}},
        estimated_completion_time_epoch_usec_{::uint64_t{0u}},
        estimated_percent_complete_{0},
        heatmap_height_{0u},
        heatmap_width_{0u},
        geo_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR AreaSearchStatus::AreaSearchStatus(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AreaSearchStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AreaSearchStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AreaSearchStatusDefaultTypeInternal() {}
  union {
    AreaSearchStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AreaSearchStatusDefaultTypeInternal _AreaSearchStatus_default_instance_;
}  // namespace AreaSearchStatus
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_AreaSearchStatus_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_AreaSearchStatus_2eproto = nullptr;
const ::uint32_t
    TableStruct_AreaSearchStatus_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::AreaSearchStatus::AreaSearchStatus, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::AreaSearchStatus::AreaSearchStatus, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::AreaSearchStatus::AreaSearchStatus, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::AreaSearchStatus::AreaSearchStatus, _impl_.vehicle_id_),
        PROTOBUF_FIELD_OFFSET(::AreaSearchStatus::AreaSearchStatus, _impl_.timestamp_epoch_usec_),
        PROTOBUF_FIELD_OFFSET(::AreaSearchStatus::AreaSearchStatus, _impl_.estimated_completion_time_epoch_usec_),
        PROTOBUF_FIELD_OFFSET(::AreaSearchStatus::AreaSearchStatus, _impl_.estimated_percent_complete_),
        PROTOBUF_FIELD_OFFSET(::AreaSearchStatus::AreaSearchStatus, _impl_.heatmap_bounding_box_),
        PROTOBUF_FIELD_OFFSET(::AreaSearchStatus::AreaSearchStatus, _impl_.heatmap_height_),
        PROTOBUF_FIELD_OFFSET(::AreaSearchStatus::AreaSearchStatus, _impl_.heatmap_width_),
        PROTOBUF_FIELD_OFFSET(::AreaSearchStatus::AreaSearchStatus, _impl_.heatmap_data_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::AreaSearchStatus::AreaSearchStatus, _impl_.geo_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::AreaSearchStatus::GeoCircle, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::AreaSearchStatus::GeoCircle, _impl_.center_),
        PROTOBUF_FIELD_OFFSET(::AreaSearchStatus::GeoCircle, _impl_.radius_m_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::AreaSearchStatus::GeoPoint, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::AreaSearchStatus::GeoPoint, _impl_.latitude_deg_),
        PROTOBUF_FIELD_OFFSET(::AreaSearchStatus::GeoPoint, _impl_.longitude_deg_),
        PROTOBUF_FIELD_OFFSET(::AreaSearchStatus::GeoPoint, _impl_.altitude_msl_m_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::AreaSearchStatus::GeoPolygon, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::AreaSearchStatus::GeoPolygon, _impl_.bounding_points_),
        PROTOBUF_FIELD_OFFSET(::AreaSearchStatus::GeoRectangle, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::AreaSearchStatus::GeoRectangle, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::AreaSearchStatus::GeoRectangle, _impl_.upper_left_point_),
        PROTOBUF_FIELD_OFFSET(::AreaSearchStatus::GeoRectangle, _impl_.bottom_right_point_),
        0,
        1,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 20, -1, sizeof(::AreaSearchStatus::AreaSearchStatus)},
        {31, -1, -1, sizeof(::AreaSearchStatus::GeoCircle)},
        {41, -1, -1, sizeof(::AreaSearchStatus::GeoPoint)},
        {52, -1, -1, sizeof(::AreaSearchStatus::GeoPolygon)},
        {61, 71, -1, sizeof(::AreaSearchStatus::GeoRectangle)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::AreaSearchStatus::_AreaSearchStatus_default_instance_._instance,
    &::AreaSearchStatus::_GeoCircle_default_instance_._instance,
    &::AreaSearchStatus::_GeoPoint_default_instance_._instance,
    &::AreaSearchStatus::_GeoPolygon_default_instance_._instance,
    &::AreaSearchStatus::_GeoRectangle_default_instance_._instance,
};
const char descriptor_table_protodef_AreaSearchStatus_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\026AreaSearchStatus.proto\022\020AreaSearchStat"
    "us\"\305\003\n\020AreaSearchStatus\022\022\n\nvehicle_id\030\001 "
    "\001(\004\022\034\n\024timestamp_epoch_usec\030\002 \001(\004\022,\n$est"
    "imated_completion_time_epoch_usec\030\003 \001(\004\022"
    "\"\n\032estimated_percent_complete\030\004 \001(\002\022<\n\024h"
    "eatmap_bounding_box\030\005 \001(\0132\036.AreaSearchSt"
    "atus.GeoRectangle\022\026\n\016heatmap_height\030\006 \001("
    "\r\022\025\n\rheatmap_width\030\007 \001(\r\022\024\n\014heatmap_data"
    "\030\010 \003(\r\022C\n\024active_geometry_type\030\t \001(\0162#.A"
    "reaSearchStatus.GeometryKind_EnumH\000\022/\n\007p"
    "olygon\030\n \001(\0132\034.AreaSearchStatus.GeoPolyg"
    "onH\000\022-\n\006circle\030\013 \001(\0132\033.AreaSearchStatus."
    "GeoCircleH\000B\005\n\003geo\"-\n\tGeoCircle\022\016\n\006cente"
    "r\030\001 \001(\001\022\020\n\010radius_m\030\002 \001(\001\"O\n\010GeoPoint\022\024\n"
    "\014latitude_deg\030\001 \001(\001\022\025\n\rlongitude_deg\030\002 \001"
    "(\001\022\026\n\016altitude_msl_m\030\003 \001(\001\"%\n\nGeoPolygon"
    "\022\027\n\017bounding_points\030\001 \001(\001\"|\n\014GeoRectangl"
    "e\0224\n\020upper_left_point\030\001 \001(\0132\032.AreaSearch"
    "Status.GeoPoint\0226\n\022bottom_right_point\030\002 "
    "\001(\0132\032.AreaSearchStatus.GeoPoint*9\n\021Geome"
    "tryKind_Enum\022\013\n\007POLYGON\020\000\022\n\n\006CIRCLE\020\001\022\013\n"
    "\007UNKNOWN\020\002b\006proto3"
};
static ::absl::once_flag descriptor_table_AreaSearchStatus_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_AreaSearchStatus_2eproto = {
    false,
    false,
    858,
    descriptor_table_protodef_AreaSearchStatus_2eproto,
    "AreaSearchStatus.proto",
    &descriptor_table_AreaSearchStatus_2eproto_once,
    nullptr,
    0,
    5,
    schemas,
    file_default_instances,
    TableStruct_AreaSearchStatus_2eproto::offsets,
    file_level_enum_descriptors_AreaSearchStatus_2eproto,
    file_level_service_descriptors_AreaSearchStatus_2eproto,
};
namespace AreaSearchStatus {
const ::google::protobuf::EnumDescriptor* GeometryKind_Enum_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_AreaSearchStatus_2eproto);
  return file_level_enum_descriptors_AreaSearchStatus_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t GeometryKind_Enum_internal_data_[] = {
    196608u, 0u, };
bool GeometryKind_Enum_IsValid(int value) {
  return 0 <= value && value <= 2;
}
// ===================================================================

class AreaSearchStatus::_Internal {
 public:
  using HasBits =
      decltype(std::declval<AreaSearchStatus>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AreaSearchStatus, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::AreaSearchStatus::AreaSearchStatus, _impl_._oneof_case_);
};

void AreaSearchStatus::set_allocated_polygon(::AreaSearchStatus::GeoPolygon* polygon) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_geo();
  if (polygon) {
    ::google::protobuf::Arena* submessage_arena = polygon->GetArena();
    if (message_arena != submessage_arena) {
      polygon = ::google::protobuf::internal::GetOwnedMessage(message_arena, polygon, submessage_arena);
    }
    set_has_polygon();
    _impl_.geo_.polygon_ = polygon;
  }
  // @@protoc_insertion_point(field_set_allocated:AreaSearchStatus.AreaSearchStatus.polygon)
}
void AreaSearchStatus::set_allocated_circle(::AreaSearchStatus::GeoCircle* circle) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_geo();
  if (circle) {
    ::google::protobuf::Arena* submessage_arena = circle->GetArena();
    if (message_arena != submessage_arena) {
      circle = ::google::protobuf::internal::GetOwnedMessage(message_arena, circle, submessage_arena);
    }
    set_has_circle();
    _impl_.geo_.circle_ = circle;
  }
  // @@protoc_insertion_point(field_set_allocated:AreaSearchStatus.AreaSearchStatus.circle)
}
AreaSearchStatus::AreaSearchStatus(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:AreaSearchStatus.AreaSearchStatus)
}
inline PROTOBUF_NDEBUG_INLINE AreaSearchStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::AreaSearchStatus::AreaSearchStatus& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        heatmap_data_{visibility, arena, from.heatmap_data_},
        _heatmap_data_cached_byte_size_{0},
        geo_{},
        _oneof_case_{from._oneof_case_[0]} {}

AreaSearchStatus::AreaSearchStatus(
    ::google::protobuf::Arena* arena,
    const AreaSearchStatus& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AreaSearchStatus* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.heatmap_bounding_box_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::AreaSearchStatus::GeoRectangle>(
                              arena, *from._impl_.heatmap_bounding_box_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, vehicle_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, vehicle_id_),
           offsetof(Impl_, heatmap_width_) -
               offsetof(Impl_, vehicle_id_) +
               sizeof(Impl_::heatmap_width_));
  switch (geo_case()) {
    case GEO_NOT_SET:
      break;
      case kActiveGeometryType:
        _impl_.geo_.active_geometry_type_ = from._impl_.geo_.active_geometry_type_;
        break;
      case kPolygon:
        _impl_.geo_.polygon_ = ::google::protobuf::Message::CopyConstruct<::AreaSearchStatus::GeoPolygon>(arena, *from._impl_.geo_.polygon_);
        break;
      case kCircle:
        _impl_.geo_.circle_ = ::google::protobuf::Message::CopyConstruct<::AreaSearchStatus::GeoCircle>(arena, *from._impl_.geo_.circle_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:AreaSearchStatus.AreaSearchStatus)
}
inline PROTOBUF_NDEBUG_INLINE AreaSearchStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        heatmap_data_{visibility, arena},
        _heatmap_data_cached_byte_size_{0},
        geo_{},
        _oneof_case_{} {}

inline void AreaSearchStatus::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, heatmap_bounding_box_),
           0,
           offsetof(Impl_, heatmap_width_) -
               offsetof(Impl_, heatmap_bounding_box_) +
               sizeof(Impl_::heatmap_width_));
}
AreaSearchStatus::~AreaSearchStatus() {
  // @@protoc_insertion_point(destructor:AreaSearchStatus.AreaSearchStatus)
  SharedDtor(*this);
}
inline void AreaSearchStatus::SharedDtor(MessageLite& self) {
  AreaSearchStatus& this_ = static_cast<AreaSearchStatus&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.heatmap_bounding_box_;
  if (this_.has_geo()) {
    this_.clear_geo();
  }
  this_._impl_.~Impl_();
}

void AreaSearchStatus::clear_geo() {
// @@protoc_insertion_point(one_of_clear_start:AreaSearchStatus.AreaSearchStatus)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (geo_case()) {
    case kActiveGeometryType: {
      // No need to clear
      break;
    }
    case kPolygon: {
      if (GetArena() == nullptr) {
        delete _impl_.geo_.polygon_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.geo_.polygon_);
      }
      break;
    }
    case kCircle: {
      if (GetArena() == nullptr) {
        delete _impl_.geo_.circle_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.geo_.circle_);
      }
      break;
    }
    case GEO_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = GEO_NOT_SET;
}


inline void* AreaSearchStatus::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AreaSearchStatus(arena);
}
constexpr auto AreaSearchStatus::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(AreaSearchStatus, _impl_.heatmap_data_) +
          decltype(AreaSearchStatus::_impl_.heatmap_data_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(AreaSearchStatus), alignof(AreaSearchStatus), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&AreaSearchStatus::PlacementNew_,
                                 sizeof(AreaSearchStatus),
                                 alignof(AreaSearchStatus));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AreaSearchStatus::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AreaSearchStatus_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AreaSearchStatus::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AreaSearchStatus>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AreaSearchStatus::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AreaSearchStatus>(), &AreaSearchStatus::ByteSizeLong,
            &AreaSearchStatus::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AreaSearchStatus, _impl_._cached_size_),
        false,
    },
    &AreaSearchStatus::kDescriptorMethods,
    &descriptor_table_AreaSearchStatus_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AreaSearchStatus::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 11, 3, 0, 2> AreaSearchStatus::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AreaSearchStatus, _impl_._has_bits_),
    0, // no _extensions_
    11, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965248,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::AreaSearchStatus::AreaSearchStatus>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated uint32 heatmap_data = 8;
    {::_pbi::TcParser::FastV32P1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(AreaSearchStatus, _impl_.heatmap_data_)}},
    // uint64 vehicle_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(AreaSearchStatus, _impl_.vehicle_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(AreaSearchStatus, _impl_.vehicle_id_)}},
    // uint64 timestamp_epoch_usec = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(AreaSearchStatus, _impl_.timestamp_epoch_usec_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(AreaSearchStatus, _impl_.timestamp_epoch_usec_)}},
    // uint64 estimated_completion_time_epoch_usec = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(AreaSearchStatus, _impl_.estimated_completion_time_epoch_usec_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(AreaSearchStatus, _impl_.estimated_completion_time_epoch_usec_)}},
    // float estimated_percent_complete = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(AreaSearchStatus, _impl_.estimated_percent_complete_)}},
    // .AreaSearchStatus.GeoRectangle heatmap_bounding_box = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(AreaSearchStatus, _impl_.heatmap_bounding_box_)}},
    // uint32 heatmap_height = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AreaSearchStatus, _impl_.heatmap_height_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(AreaSearchStatus, _impl_.heatmap_height_)}},
    // uint32 heatmap_width = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AreaSearchStatus, _impl_.heatmap_width_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(AreaSearchStatus, _impl_.heatmap_width_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 vehicle_id = 1;
    {PROTOBUF_FIELD_OFFSET(AreaSearchStatus, _impl_.vehicle_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 timestamp_epoch_usec = 2;
    {PROTOBUF_FIELD_OFFSET(AreaSearchStatus, _impl_.timestamp_epoch_usec_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 estimated_completion_time_epoch_usec = 3;
    {PROTOBUF_FIELD_OFFSET(AreaSearchStatus, _impl_.estimated_completion_time_epoch_usec_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // float estimated_percent_complete = 4;
    {PROTOBUF_FIELD_OFFSET(AreaSearchStatus, _impl_.estimated_percent_complete_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // .AreaSearchStatus.GeoRectangle heatmap_bounding_box = 5;
    {PROTOBUF_FIELD_OFFSET(AreaSearchStatus, _impl_.heatmap_bounding_box_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 heatmap_height = 6;
    {PROTOBUF_FIELD_OFFSET(AreaSearchStatus, _impl_.heatmap_height_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 heatmap_width = 7;
    {PROTOBUF_FIELD_OFFSET(AreaSearchStatus, _impl_.heatmap_width_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // repeated uint32 heatmap_data = 8;
    {PROTOBUF_FIELD_OFFSET(AreaSearchStatus, _impl_.heatmap_data_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt32)},
    // .AreaSearchStatus.GeometryKind_Enum active_geometry_type = 9;
    {PROTOBUF_FIELD_OFFSET(AreaSearchStatus, _impl_.geo_.active_geometry_type_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kOpenEnum)},
    // .AreaSearchStatus.GeoPolygon polygon = 10;
    {PROTOBUF_FIELD_OFFSET(AreaSearchStatus, _impl_.geo_.polygon_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .AreaSearchStatus.GeoCircle circle = 11;
    {PROTOBUF_FIELD_OFFSET(AreaSearchStatus, _impl_.geo_.circle_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::AreaSearchStatus::GeoRectangle>()},
    {::_pbi::TcParser::GetTable<::AreaSearchStatus::GeoPolygon>()},
    {::_pbi::TcParser::GetTable<::AreaSearchStatus::GeoCircle>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void AreaSearchStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:AreaSearchStatus.AreaSearchStatus)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.heatmap_data_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.heatmap_bounding_box_ != nullptr);
    _impl_.heatmap_bounding_box_->Clear();
  }
  ::memset(&_impl_.vehicle_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.heatmap_width_) -
      reinterpret_cast<char*>(&_impl_.vehicle_id_)) + sizeof(_impl_.heatmap_width_));
  clear_geo();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AreaSearchStatus::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AreaSearchStatus& this_ = static_cast<const AreaSearchStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AreaSearchStatus::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AreaSearchStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:AreaSearchStatus.AreaSearchStatus)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 vehicle_id = 1;
          if (this_._internal_vehicle_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_vehicle_id(), target);
          }

          // uint64 timestamp_epoch_usec = 2;
          if (this_._internal_timestamp_epoch_usec() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_timestamp_epoch_usec(), target);
          }

          // uint64 estimated_completion_time_epoch_usec = 3;
          if (this_._internal_estimated_completion_time_epoch_usec() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                3, this_._internal_estimated_completion_time_epoch_usec(), target);
          }

          // float estimated_percent_complete = 4;
          if (::absl::bit_cast<::uint32_t>(this_._internal_estimated_percent_complete()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                4, this_._internal_estimated_percent_complete(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .AreaSearchStatus.GeoRectangle heatmap_bounding_box = 5;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.heatmap_bounding_box_, this_._impl_.heatmap_bounding_box_->GetCachedSize(), target,
                stream);
          }

          // uint32 heatmap_height = 6;
          if (this_._internal_heatmap_height() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                6, this_._internal_heatmap_height(), target);
          }

          // uint32 heatmap_width = 7;
          if (this_._internal_heatmap_width() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                7, this_._internal_heatmap_width(), target);
          }

          // repeated uint32 heatmap_data = 8;
          {
            int byte_size = this_._impl_._heatmap_data_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteUInt32Packed(
                  8, this_._internal_heatmap_data(), byte_size, target);
            }
          }

          switch (this_.geo_case()) {
            case kActiveGeometryType: {
              target = stream->EnsureSpace(target);
              target = ::_pbi::WireFormatLite::WriteEnumToArray(
                  9, this_._internal_active_geometry_type(), target);
              break;
            }
            case kPolygon: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  10, *this_._impl_.geo_.polygon_, this_._impl_.geo_.polygon_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kCircle: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  11, *this_._impl_.geo_.circle_, this_._impl_.geo_.circle_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:AreaSearchStatus.AreaSearchStatus)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AreaSearchStatus::ByteSizeLong(const MessageLite& base) {
          const AreaSearchStatus& this_ = static_cast<const AreaSearchStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AreaSearchStatus::ByteSizeLong() const {
          const AreaSearchStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:AreaSearchStatus.AreaSearchStatus)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated uint32 heatmap_data = 8;
            {
              total_size +=
                  ::_pbi::WireFormatLite::UInt32SizeWithPackedTagSize(
                      this_._internal_heatmap_data(), 1,
                      this_._impl_._heatmap_data_cached_byte_size_);
            }
          }
           {
            // .AreaSearchStatus.GeoRectangle heatmap_bounding_box = 5;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.heatmap_bounding_box_);
            }
          }
           {
            // uint64 vehicle_id = 1;
            if (this_._internal_vehicle_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_vehicle_id());
            }
            // uint64 timestamp_epoch_usec = 2;
            if (this_._internal_timestamp_epoch_usec() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_timestamp_epoch_usec());
            }
            // uint64 estimated_completion_time_epoch_usec = 3;
            if (this_._internal_estimated_completion_time_epoch_usec() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_estimated_completion_time_epoch_usec());
            }
            // float estimated_percent_complete = 4;
            if (::absl::bit_cast<::uint32_t>(this_._internal_estimated_percent_complete()) != 0) {
              total_size += 5;
            }
            // uint32 heatmap_height = 6;
            if (this_._internal_heatmap_height() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_heatmap_height());
            }
            // uint32 heatmap_width = 7;
            if (this_._internal_heatmap_width() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_heatmap_width());
            }
          }
          switch (this_.geo_case()) {
            // .AreaSearchStatus.GeometryKind_Enum active_geometry_type = 9;
            case kActiveGeometryType: {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_active_geometry_type());
              break;
            }
            // .AreaSearchStatus.GeoPolygon polygon = 10;
            case kPolygon: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.geo_.polygon_);
              break;
            }
            // .AreaSearchStatus.GeoCircle circle = 11;
            case kCircle: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.geo_.circle_);
              break;
            }
            case GEO_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AreaSearchStatus::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AreaSearchStatus*>(&to_msg);
  auto& from = static_cast<const AreaSearchStatus&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:AreaSearchStatus.AreaSearchStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_heatmap_data()->MergeFrom(from._internal_heatmap_data());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.heatmap_bounding_box_ != nullptr);
    if (_this->_impl_.heatmap_bounding_box_ == nullptr) {
      _this->_impl_.heatmap_bounding_box_ =
          ::google::protobuf::Message::CopyConstruct<::AreaSearchStatus::GeoRectangle>(arena, *from._impl_.heatmap_bounding_box_);
    } else {
      _this->_impl_.heatmap_bounding_box_->MergeFrom(*from._impl_.heatmap_bounding_box_);
    }
  }
  if (from._internal_vehicle_id() != 0) {
    _this->_impl_.vehicle_id_ = from._impl_.vehicle_id_;
  }
  if (from._internal_timestamp_epoch_usec() != 0) {
    _this->_impl_.timestamp_epoch_usec_ = from._impl_.timestamp_epoch_usec_;
  }
  if (from._internal_estimated_completion_time_epoch_usec() != 0) {
    _this->_impl_.estimated_completion_time_epoch_usec_ = from._impl_.estimated_completion_time_epoch_usec_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_estimated_percent_complete()) != 0) {
    _this->_impl_.estimated_percent_complete_ = from._impl_.estimated_percent_complete_;
  }
  if (from._internal_heatmap_height() != 0) {
    _this->_impl_.heatmap_height_ = from._impl_.heatmap_height_;
  }
  if (from._internal_heatmap_width() != 0) {
    _this->_impl_.heatmap_width_ = from._impl_.heatmap_width_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_geo();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kActiveGeometryType: {
        _this->_impl_.geo_.active_geometry_type_ = from._impl_.geo_.active_geometry_type_;
        break;
      }
      case kPolygon: {
        if (oneof_needs_init) {
          _this->_impl_.geo_.polygon_ =
              ::google::protobuf::Message::CopyConstruct<::AreaSearchStatus::GeoPolygon>(arena, *from._impl_.geo_.polygon_);
        } else {
          _this->_impl_.geo_.polygon_->MergeFrom(from._internal_polygon());
        }
        break;
      }
      case kCircle: {
        if (oneof_needs_init) {
          _this->_impl_.geo_.circle_ =
              ::google::protobuf::Message::CopyConstruct<::AreaSearchStatus::GeoCircle>(arena, *from._impl_.geo_.circle_);
        } else {
          _this->_impl_.geo_.circle_->MergeFrom(from._internal_circle());
        }
        break;
      }
      case GEO_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AreaSearchStatus::CopyFrom(const AreaSearchStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AreaSearchStatus.AreaSearchStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AreaSearchStatus::InternalSwap(AreaSearchStatus* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.heatmap_data_.InternalSwap(&other->_impl_.heatmap_data_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AreaSearchStatus, _impl_.heatmap_width_)
      + sizeof(AreaSearchStatus::_impl_.heatmap_width_)
      - PROTOBUF_FIELD_OFFSET(AreaSearchStatus, _impl_.heatmap_bounding_box_)>(
          reinterpret_cast<char*>(&_impl_.heatmap_bounding_box_),
          reinterpret_cast<char*>(&other->_impl_.heatmap_bounding_box_));
  swap(_impl_.geo_, other->_impl_.geo_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata AreaSearchStatus::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GeoCircle::_Internal {
 public:
};

GeoCircle::GeoCircle(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:AreaSearchStatus.GeoCircle)
}
GeoCircle::GeoCircle(
    ::google::protobuf::Arena* arena, const GeoCircle& from)
    : GeoCircle(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE GeoCircle::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GeoCircle::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, center_),
           0,
           offsetof(Impl_, radius_m_) -
               offsetof(Impl_, center_) +
               sizeof(Impl_::radius_m_));
}
GeoCircle::~GeoCircle() {
  // @@protoc_insertion_point(destructor:AreaSearchStatus.GeoCircle)
  SharedDtor(*this);
}
inline void GeoCircle::SharedDtor(MessageLite& self) {
  GeoCircle& this_ = static_cast<GeoCircle&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* GeoCircle::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GeoCircle(arena);
}
constexpr auto GeoCircle::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GeoCircle),
                                            alignof(GeoCircle));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GeoCircle::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GeoCircle_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GeoCircle::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GeoCircle>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GeoCircle::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GeoCircle>(), &GeoCircle::ByteSizeLong,
            &GeoCircle::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GeoCircle, _impl_._cached_size_),
        false,
    },
    &GeoCircle::kDescriptorMethods,
    &descriptor_table_AreaSearchStatus_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GeoCircle::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> GeoCircle::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::AreaSearchStatus::GeoCircle>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double radius_m = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(GeoCircle, _impl_.radius_m_)}},
    // double center = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(GeoCircle, _impl_.center_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double center = 1;
    {PROTOBUF_FIELD_OFFSET(GeoCircle, _impl_.center_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double radius_m = 2;
    {PROTOBUF_FIELD_OFFSET(GeoCircle, _impl_.radius_m_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void GeoCircle::Clear() {
// @@protoc_insertion_point(message_clear_start:AreaSearchStatus.GeoCircle)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.center_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.radius_m_) -
      reinterpret_cast<char*>(&_impl_.center_)) + sizeof(_impl_.radius_m_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GeoCircle::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GeoCircle& this_ = static_cast<const GeoCircle&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GeoCircle::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GeoCircle& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:AreaSearchStatus.GeoCircle)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // double center = 1;
          if (::absl::bit_cast<::uint64_t>(this_._internal_center()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_center(), target);
          }

          // double radius_m = 2;
          if (::absl::bit_cast<::uint64_t>(this_._internal_radius_m()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                2, this_._internal_radius_m(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:AreaSearchStatus.GeoCircle)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GeoCircle::ByteSizeLong(const MessageLite& base) {
          const GeoCircle& this_ = static_cast<const GeoCircle&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GeoCircle::ByteSizeLong() const {
          const GeoCircle& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:AreaSearchStatus.GeoCircle)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // double center = 1;
            if (::absl::bit_cast<::uint64_t>(this_._internal_center()) != 0) {
              total_size += 9;
            }
            // double radius_m = 2;
            if (::absl::bit_cast<::uint64_t>(this_._internal_radius_m()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GeoCircle::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GeoCircle*>(&to_msg);
  auto& from = static_cast<const GeoCircle&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:AreaSearchStatus.GeoCircle)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint64_t>(from._internal_center()) != 0) {
    _this->_impl_.center_ = from._impl_.center_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_radius_m()) != 0) {
    _this->_impl_.radius_m_ = from._impl_.radius_m_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GeoCircle::CopyFrom(const GeoCircle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AreaSearchStatus.GeoCircle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GeoCircle::InternalSwap(GeoCircle* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GeoCircle, _impl_.radius_m_)
      + sizeof(GeoCircle::_impl_.radius_m_)
      - PROTOBUF_FIELD_OFFSET(GeoCircle, _impl_.center_)>(
          reinterpret_cast<char*>(&_impl_.center_),
          reinterpret_cast<char*>(&other->_impl_.center_));
}

::google::protobuf::Metadata GeoCircle::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GeoPoint::_Internal {
 public:
};

GeoPoint::GeoPoint(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:AreaSearchStatus.GeoPoint)
}
GeoPoint::GeoPoint(
    ::google::protobuf::Arena* arena, const GeoPoint& from)
    : GeoPoint(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE GeoPoint::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GeoPoint::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, latitude_deg_),
           0,
           offsetof(Impl_, altitude_msl_m_) -
               offsetof(Impl_, latitude_deg_) +
               sizeof(Impl_::altitude_msl_m_));
}
GeoPoint::~GeoPoint() {
  // @@protoc_insertion_point(destructor:AreaSearchStatus.GeoPoint)
  SharedDtor(*this);
}
inline void GeoPoint::SharedDtor(MessageLite& self) {
  GeoPoint& this_ = static_cast<GeoPoint&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* GeoPoint::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GeoPoint(arena);
}
constexpr auto GeoPoint::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GeoPoint),
                                            alignof(GeoPoint));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GeoPoint::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GeoPoint_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GeoPoint::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GeoPoint>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GeoPoint::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GeoPoint>(), &GeoPoint::ByteSizeLong,
            &GeoPoint::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GeoPoint, _impl_._cached_size_),
        false,
    },
    &GeoPoint::kDescriptorMethods,
    &descriptor_table_AreaSearchStatus_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GeoPoint::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> GeoPoint::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::AreaSearchStatus::GeoPoint>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // double latitude_deg = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(GeoPoint, _impl_.latitude_deg_)}},
    // double longitude_deg = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(GeoPoint, _impl_.longitude_deg_)}},
    // double altitude_msl_m = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(GeoPoint, _impl_.altitude_msl_m_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double latitude_deg = 1;
    {PROTOBUF_FIELD_OFFSET(GeoPoint, _impl_.latitude_deg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double longitude_deg = 2;
    {PROTOBUF_FIELD_OFFSET(GeoPoint, _impl_.longitude_deg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double altitude_msl_m = 3;
    {PROTOBUF_FIELD_OFFSET(GeoPoint, _impl_.altitude_msl_m_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void GeoPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:AreaSearchStatus.GeoPoint)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.latitude_deg_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.altitude_msl_m_) -
      reinterpret_cast<char*>(&_impl_.latitude_deg_)) + sizeof(_impl_.altitude_msl_m_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GeoPoint::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GeoPoint& this_ = static_cast<const GeoPoint&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GeoPoint::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GeoPoint& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:AreaSearchStatus.GeoPoint)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // double latitude_deg = 1;
          if (::absl::bit_cast<::uint64_t>(this_._internal_latitude_deg()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_latitude_deg(), target);
          }

          // double longitude_deg = 2;
          if (::absl::bit_cast<::uint64_t>(this_._internal_longitude_deg()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                2, this_._internal_longitude_deg(), target);
          }

          // double altitude_msl_m = 3;
          if (::absl::bit_cast<::uint64_t>(this_._internal_altitude_msl_m()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                3, this_._internal_altitude_msl_m(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:AreaSearchStatus.GeoPoint)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GeoPoint::ByteSizeLong(const MessageLite& base) {
          const GeoPoint& this_ = static_cast<const GeoPoint&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GeoPoint::ByteSizeLong() const {
          const GeoPoint& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:AreaSearchStatus.GeoPoint)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // double latitude_deg = 1;
            if (::absl::bit_cast<::uint64_t>(this_._internal_latitude_deg()) != 0) {
              total_size += 9;
            }
            // double longitude_deg = 2;
            if (::absl::bit_cast<::uint64_t>(this_._internal_longitude_deg()) != 0) {
              total_size += 9;
            }
            // double altitude_msl_m = 3;
            if (::absl::bit_cast<::uint64_t>(this_._internal_altitude_msl_m()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GeoPoint::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GeoPoint*>(&to_msg);
  auto& from = static_cast<const GeoPoint&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:AreaSearchStatus.GeoPoint)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint64_t>(from._internal_latitude_deg()) != 0) {
    _this->_impl_.latitude_deg_ = from._impl_.latitude_deg_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_longitude_deg()) != 0) {
    _this->_impl_.longitude_deg_ = from._impl_.longitude_deg_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_altitude_msl_m()) != 0) {
    _this->_impl_.altitude_msl_m_ = from._impl_.altitude_msl_m_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GeoPoint::CopyFrom(const GeoPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AreaSearchStatus.GeoPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GeoPoint::InternalSwap(GeoPoint* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GeoPoint, _impl_.altitude_msl_m_)
      + sizeof(GeoPoint::_impl_.altitude_msl_m_)
      - PROTOBUF_FIELD_OFFSET(GeoPoint, _impl_.latitude_deg_)>(
          reinterpret_cast<char*>(&_impl_.latitude_deg_),
          reinterpret_cast<char*>(&other->_impl_.latitude_deg_));
}

::google::protobuf::Metadata GeoPoint::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GeoPolygon::_Internal {
 public:
};

GeoPolygon::GeoPolygon(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:AreaSearchStatus.GeoPolygon)
}
GeoPolygon::GeoPolygon(
    ::google::protobuf::Arena* arena, const GeoPolygon& from)
    : GeoPolygon(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE GeoPolygon::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GeoPolygon::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.bounding_points_ = {};
}
GeoPolygon::~GeoPolygon() {
  // @@protoc_insertion_point(destructor:AreaSearchStatus.GeoPolygon)
  SharedDtor(*this);
}
inline void GeoPolygon::SharedDtor(MessageLite& self) {
  GeoPolygon& this_ = static_cast<GeoPolygon&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* GeoPolygon::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GeoPolygon(arena);
}
constexpr auto GeoPolygon::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GeoPolygon),
                                            alignof(GeoPolygon));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GeoPolygon::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GeoPolygon_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GeoPolygon::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GeoPolygon>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GeoPolygon::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GeoPolygon>(), &GeoPolygon::ByteSizeLong,
            &GeoPolygon::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GeoPolygon, _impl_._cached_size_),
        false,
    },
    &GeoPolygon::kDescriptorMethods,
    &descriptor_table_AreaSearchStatus_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GeoPolygon::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> GeoPolygon::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::AreaSearchStatus::GeoPolygon>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double bounding_points = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(GeoPolygon, _impl_.bounding_points_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double bounding_points = 1;
    {PROTOBUF_FIELD_OFFSET(GeoPolygon, _impl_.bounding_points_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void GeoPolygon::Clear() {
// @@protoc_insertion_point(message_clear_start:AreaSearchStatus.GeoPolygon)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.bounding_points_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GeoPolygon::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GeoPolygon& this_ = static_cast<const GeoPolygon&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GeoPolygon::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GeoPolygon& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:AreaSearchStatus.GeoPolygon)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // double bounding_points = 1;
          if (::absl::bit_cast<::uint64_t>(this_._internal_bounding_points()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_bounding_points(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:AreaSearchStatus.GeoPolygon)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GeoPolygon::ByteSizeLong(const MessageLite& base) {
          const GeoPolygon& this_ = static_cast<const GeoPolygon&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GeoPolygon::ByteSizeLong() const {
          const GeoPolygon& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:AreaSearchStatus.GeoPolygon)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // double bounding_points = 1;
            if (::absl::bit_cast<::uint64_t>(this_._internal_bounding_points()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GeoPolygon::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GeoPolygon*>(&to_msg);
  auto& from = static_cast<const GeoPolygon&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:AreaSearchStatus.GeoPolygon)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint64_t>(from._internal_bounding_points()) != 0) {
    _this->_impl_.bounding_points_ = from._impl_.bounding_points_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GeoPolygon::CopyFrom(const GeoPolygon& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AreaSearchStatus.GeoPolygon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GeoPolygon::InternalSwap(GeoPolygon* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.bounding_points_, other->_impl_.bounding_points_);
}

::google::protobuf::Metadata GeoPolygon::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GeoRectangle::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GeoRectangle>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GeoRectangle, _impl_._has_bits_);
};

GeoRectangle::GeoRectangle(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:AreaSearchStatus.GeoRectangle)
}
inline PROTOBUF_NDEBUG_INLINE GeoRectangle::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::AreaSearchStatus::GeoRectangle& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GeoRectangle::GeoRectangle(
    ::google::protobuf::Arena* arena,
    const GeoRectangle& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GeoRectangle* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.upper_left_point_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::AreaSearchStatus::GeoPoint>(
                              arena, *from._impl_.upper_left_point_)
                        : nullptr;
  _impl_.bottom_right_point_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::AreaSearchStatus::GeoPoint>(
                              arena, *from._impl_.bottom_right_point_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:AreaSearchStatus.GeoRectangle)
}
inline PROTOBUF_NDEBUG_INLINE GeoRectangle::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GeoRectangle::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, upper_left_point_),
           0,
           offsetof(Impl_, bottom_right_point_) -
               offsetof(Impl_, upper_left_point_) +
               sizeof(Impl_::bottom_right_point_));
}
GeoRectangle::~GeoRectangle() {
  // @@protoc_insertion_point(destructor:AreaSearchStatus.GeoRectangle)
  SharedDtor(*this);
}
inline void GeoRectangle::SharedDtor(MessageLite& self) {
  GeoRectangle& this_ = static_cast<GeoRectangle&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.upper_left_point_;
  delete this_._impl_.bottom_right_point_;
  this_._impl_.~Impl_();
}

inline void* GeoRectangle::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GeoRectangle(arena);
}
constexpr auto GeoRectangle::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GeoRectangle),
                                            alignof(GeoRectangle));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GeoRectangle::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GeoRectangle_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GeoRectangle::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GeoRectangle>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GeoRectangle::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GeoRectangle>(), &GeoRectangle::ByteSizeLong,
            &GeoRectangle::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GeoRectangle, _impl_._cached_size_),
        false,
    },
    &GeoRectangle::kDescriptorMethods,
    &descriptor_table_AreaSearchStatus_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GeoRectangle::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> GeoRectangle::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GeoRectangle, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::AreaSearchStatus::GeoRectangle>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .AreaSearchStatus.GeoPoint bottom_right_point = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(GeoRectangle, _impl_.bottom_right_point_)}},
    // .AreaSearchStatus.GeoPoint upper_left_point = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GeoRectangle, _impl_.upper_left_point_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .AreaSearchStatus.GeoPoint upper_left_point = 1;
    {PROTOBUF_FIELD_OFFSET(GeoRectangle, _impl_.upper_left_point_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .AreaSearchStatus.GeoPoint bottom_right_point = 2;
    {PROTOBUF_FIELD_OFFSET(GeoRectangle, _impl_.bottom_right_point_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::AreaSearchStatus::GeoPoint>()},
    {::_pbi::TcParser::GetTable<::AreaSearchStatus::GeoPoint>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GeoRectangle::Clear() {
// @@protoc_insertion_point(message_clear_start:AreaSearchStatus.GeoRectangle)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.upper_left_point_ != nullptr);
      _impl_.upper_left_point_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.bottom_right_point_ != nullptr);
      _impl_.bottom_right_point_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GeoRectangle::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GeoRectangle& this_ = static_cast<const GeoRectangle&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GeoRectangle::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GeoRectangle& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:AreaSearchStatus.GeoRectangle)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .AreaSearchStatus.GeoPoint upper_left_point = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.upper_left_point_, this_._impl_.upper_left_point_->GetCachedSize(), target,
                stream);
          }

          // .AreaSearchStatus.GeoPoint bottom_right_point = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.bottom_right_point_, this_._impl_.bottom_right_point_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:AreaSearchStatus.GeoRectangle)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GeoRectangle::ByteSizeLong(const MessageLite& base) {
          const GeoRectangle& this_ = static_cast<const GeoRectangle&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GeoRectangle::ByteSizeLong() const {
          const GeoRectangle& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:AreaSearchStatus.GeoRectangle)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .AreaSearchStatus.GeoPoint upper_left_point = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.upper_left_point_);
            }
            // .AreaSearchStatus.GeoPoint bottom_right_point = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.bottom_right_point_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GeoRectangle::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GeoRectangle*>(&to_msg);
  auto& from = static_cast<const GeoRectangle&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:AreaSearchStatus.GeoRectangle)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.upper_left_point_ != nullptr);
      if (_this->_impl_.upper_left_point_ == nullptr) {
        _this->_impl_.upper_left_point_ =
            ::google::protobuf::Message::CopyConstruct<::AreaSearchStatus::GeoPoint>(arena, *from._impl_.upper_left_point_);
      } else {
        _this->_impl_.upper_left_point_->MergeFrom(*from._impl_.upper_left_point_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.bottom_right_point_ != nullptr);
      if (_this->_impl_.bottom_right_point_ == nullptr) {
        _this->_impl_.bottom_right_point_ =
            ::google::protobuf::Message::CopyConstruct<::AreaSearchStatus::GeoPoint>(arena, *from._impl_.bottom_right_point_);
      } else {
        _this->_impl_.bottom_right_point_->MergeFrom(*from._impl_.bottom_right_point_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GeoRectangle::CopyFrom(const GeoRectangle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AreaSearchStatus.GeoRectangle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GeoRectangle::InternalSwap(GeoRectangle* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GeoRectangle, _impl_.bottom_right_point_)
      + sizeof(GeoRectangle::_impl_.bottom_right_point_)
      - PROTOBUF_FIELD_OFFSET(GeoRectangle, _impl_.upper_left_point_)>(
          reinterpret_cast<char*>(&_impl_.upper_left_point_),
          reinterpret_cast<char*>(&other->_impl_.upper_left_point_));
}

::google::protobuf::Metadata GeoRectangle::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace AreaSearchStatus
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_AreaSearchStatus_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
