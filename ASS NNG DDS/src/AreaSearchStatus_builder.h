#ifndef AREASEARCHSTATUS_BUILDER_H
#define AREASEARCHSTATUS_BUILDER_H

/* Generated by flatcc 0.6.1-dev FlatBuffers schema compiler for C by dvide.com */

#ifndef AREASEARCHSTATUS_READER_H
#include "AreaSearchStatus_reader.h"
#endif
#ifndef FLATBUFFERS_COMMON_BUILDER_H
#include "flatbuffers_common_builder.h"
#endif
#include "flatcc/flatcc_prologue.h"
#ifndef flatbuffers_identifier
#define flatbuffers_identifier 0
#endif
#ifndef flatbuffers_extension
#define flatbuffers_extension ".bin"
#endif

#define __AreaSearchStatus_GeometryKind_Enum_formal_args , AreaSearchStatus_GeometryKind_Enum_enum_t v0
#define __AreaSearchStatus_GeometryKind_Enum_call_args , v0
__flatbuffers_build_scalar(flatbuffers_, AreaSearchStatus_GeometryKind_Enum, AreaSearchStatus_GeometryKind_Enum_enum_t)

static const flatbuffers_voffset_t __AreaSearchStatus_GeoCircle_required[] = { 0 };
typedef flatbuffers_ref_t AreaSearchStatus_GeoCircle_ref_t;
static AreaSearchStatus_GeoCircle_ref_t AreaSearchStatus_GeoCircle_clone(flatbuffers_builder_t *B, AreaSearchStatus_GeoCircle_table_t t);
__flatbuffers_build_table(flatbuffers_, AreaSearchStatus_GeoCircle, 2)

static const flatbuffers_voffset_t __AreaSearchStatus_GeoPolygon_required[] = { 0 };
typedef flatbuffers_ref_t AreaSearchStatus_GeoPolygon_ref_t;
static AreaSearchStatus_GeoPolygon_ref_t AreaSearchStatus_GeoPolygon_clone(flatbuffers_builder_t *B, AreaSearchStatus_GeoPolygon_table_t t);
__flatbuffers_build_table(flatbuffers_, AreaSearchStatus_GeoPolygon, 1)

static const flatbuffers_voffset_t __AreaSearchStatus_GeoPoint_required[] = { 0 };
typedef flatbuffers_ref_t AreaSearchStatus_GeoPoint_ref_t;
static AreaSearchStatus_GeoPoint_ref_t AreaSearchStatus_GeoPoint_clone(flatbuffers_builder_t *B, AreaSearchStatus_GeoPoint_table_t t);
__flatbuffers_build_table(flatbuffers_, AreaSearchStatus_GeoPoint, 3)

static const flatbuffers_voffset_t __AreaSearchStatus_GeoRectangle_required[] = { 0 };
typedef flatbuffers_ref_t AreaSearchStatus_GeoRectangle_ref_t;
static AreaSearchStatus_GeoRectangle_ref_t AreaSearchStatus_GeoRectangle_clone(flatbuffers_builder_t *B, AreaSearchStatus_GeoRectangle_table_t t);
__flatbuffers_build_table(flatbuffers_, AreaSearchStatus_GeoRectangle, 2)

static const flatbuffers_voffset_t __AreaSearchStatus_AreaSearchStatus_required[] = { 0 };
typedef flatbuffers_ref_t AreaSearchStatus_AreaSearchStatus_ref_t;
static AreaSearchStatus_AreaSearchStatus_ref_t AreaSearchStatus_AreaSearchStatus_clone(flatbuffers_builder_t *B, AreaSearchStatus_AreaSearchStatus_table_t t);
__flatbuffers_build_table(flatbuffers_, AreaSearchStatus_AreaSearchStatus, 11)

#define __AreaSearchStatus_GeoCircle_formal_args , double v0, double v1
#define __AreaSearchStatus_GeoCircle_call_args , v0, v1
static inline AreaSearchStatus_GeoCircle_ref_t AreaSearchStatus_GeoCircle_create(flatbuffers_builder_t *B __AreaSearchStatus_GeoCircle_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, AreaSearchStatus_GeoCircle, AreaSearchStatus_GeoCircle_file_identifier, AreaSearchStatus_GeoCircle_type_identifier)

#define __AreaSearchStatus_GeoPolygon_formal_args , double v0
#define __AreaSearchStatus_GeoPolygon_call_args , v0
static inline AreaSearchStatus_GeoPolygon_ref_t AreaSearchStatus_GeoPolygon_create(flatbuffers_builder_t *B __AreaSearchStatus_GeoPolygon_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, AreaSearchStatus_GeoPolygon, AreaSearchStatus_GeoPolygon_file_identifier, AreaSearchStatus_GeoPolygon_type_identifier)

#define __AreaSearchStatus_GeoPoint_formal_args , double v0, double v1, double v2
#define __AreaSearchStatus_GeoPoint_call_args , v0, v1, v2
static inline AreaSearchStatus_GeoPoint_ref_t AreaSearchStatus_GeoPoint_create(flatbuffers_builder_t *B __AreaSearchStatus_GeoPoint_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, AreaSearchStatus_GeoPoint, AreaSearchStatus_GeoPoint_file_identifier, AreaSearchStatus_GeoPoint_type_identifier)

#define __AreaSearchStatus_GeoRectangle_formal_args , AreaSearchStatus_GeoPoint_ref_t v0, AreaSearchStatus_GeoPoint_ref_t v1
#define __AreaSearchStatus_GeoRectangle_call_args , v0, v1
static inline AreaSearchStatus_GeoRectangle_ref_t AreaSearchStatus_GeoRectangle_create(flatbuffers_builder_t *B __AreaSearchStatus_GeoRectangle_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, AreaSearchStatus_GeoRectangle, AreaSearchStatus_GeoRectangle_file_identifier, AreaSearchStatus_GeoRectangle_type_identifier)

#define __AreaSearchStatus_AreaSearchStatus_formal_args ,\
  uint64_t v0, uint64_t v1, uint64_t v2, float v3,\
  AreaSearchStatus_GeoRectangle_ref_t v4, uint16_t v5, uint16_t v6, flatbuffers_uint8_vec_ref_t v7,\
  AreaSearchStatus_GeometryKind_Enum_enum_t v8, AreaSearchStatus_GeoPolygon_vec_ref_t v9, AreaSearchStatus_GeoCircle_vec_ref_t v10
#define __AreaSearchStatus_AreaSearchStatus_call_args ,\
  v0, v1, v2, v3,\
  v4, v5, v6, v7,\
  v8, v9, v10
static inline AreaSearchStatus_AreaSearchStatus_ref_t AreaSearchStatus_AreaSearchStatus_create(flatbuffers_builder_t *B __AreaSearchStatus_AreaSearchStatus_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, AreaSearchStatus_AreaSearchStatus, AreaSearchStatus_AreaSearchStatus_file_identifier, AreaSearchStatus_AreaSearchStatus_type_identifier)

__flatbuffers_build_scalar_field(0, flatbuffers_, AreaSearchStatus_GeoCircle_center, flatbuffers_double, double, 8, 8, 0.0000000000000000, AreaSearchStatus_GeoCircle)
__flatbuffers_build_scalar_field(1, flatbuffers_, AreaSearchStatus_GeoCircle_radius_m, flatbuffers_double, double, 8, 8, 0.0000000000000000, AreaSearchStatus_GeoCircle)

static inline AreaSearchStatus_GeoCircle_ref_t AreaSearchStatus_GeoCircle_create(flatbuffers_builder_t *B __AreaSearchStatus_GeoCircle_formal_args)
{
    if (AreaSearchStatus_GeoCircle_start(B)
        || AreaSearchStatus_GeoCircle_center_add(B, v0)
        || AreaSearchStatus_GeoCircle_radius_m_add(B, v1)) {
        return 0;
    }
    return AreaSearchStatus_GeoCircle_end(B);
}

static AreaSearchStatus_GeoCircle_ref_t AreaSearchStatus_GeoCircle_clone(flatbuffers_builder_t *B, AreaSearchStatus_GeoCircle_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (AreaSearchStatus_GeoCircle_start(B)
        || AreaSearchStatus_GeoCircle_center_pick(B, t)
        || AreaSearchStatus_GeoCircle_radius_m_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, AreaSearchStatus_GeoCircle_end(B));
}

__flatbuffers_build_scalar_field(0, flatbuffers_, AreaSearchStatus_GeoPolygon_bounding_points, flatbuffers_double, double, 8, 8, 0.0000000000000000, AreaSearchStatus_GeoPolygon)

static inline AreaSearchStatus_GeoPolygon_ref_t AreaSearchStatus_GeoPolygon_create(flatbuffers_builder_t *B __AreaSearchStatus_GeoPolygon_formal_args)
{
    if (AreaSearchStatus_GeoPolygon_start(B)
        || AreaSearchStatus_GeoPolygon_bounding_points_add(B, v0)) {
        return 0;
    }
    return AreaSearchStatus_GeoPolygon_end(B);
}

static AreaSearchStatus_GeoPolygon_ref_t AreaSearchStatus_GeoPolygon_clone(flatbuffers_builder_t *B, AreaSearchStatus_GeoPolygon_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (AreaSearchStatus_GeoPolygon_start(B)
        || AreaSearchStatus_GeoPolygon_bounding_points_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, AreaSearchStatus_GeoPolygon_end(B));
}

__flatbuffers_build_scalar_field(0, flatbuffers_, AreaSearchStatus_GeoPoint_latitude_deg, flatbuffers_double, double, 8, 8, 0.0000000000000000, AreaSearchStatus_GeoPoint)
__flatbuffers_build_scalar_field(1, flatbuffers_, AreaSearchStatus_GeoPoint_longitude_deg, flatbuffers_double, double, 8, 8, 0.0000000000000000, AreaSearchStatus_GeoPoint)
__flatbuffers_build_scalar_field(2, flatbuffers_, AreaSearchStatus_GeoPoint_altitude_msl_m, flatbuffers_double, double, 8, 8, 0.0000000000000000, AreaSearchStatus_GeoPoint)

static inline AreaSearchStatus_GeoPoint_ref_t AreaSearchStatus_GeoPoint_create(flatbuffers_builder_t *B __AreaSearchStatus_GeoPoint_formal_args)
{
    if (AreaSearchStatus_GeoPoint_start(B)
        || AreaSearchStatus_GeoPoint_latitude_deg_add(B, v0)
        || AreaSearchStatus_GeoPoint_longitude_deg_add(B, v1)
        || AreaSearchStatus_GeoPoint_altitude_msl_m_add(B, v2)) {
        return 0;
    }
    return AreaSearchStatus_GeoPoint_end(B);
}

static AreaSearchStatus_GeoPoint_ref_t AreaSearchStatus_GeoPoint_clone(flatbuffers_builder_t *B, AreaSearchStatus_GeoPoint_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (AreaSearchStatus_GeoPoint_start(B)
        || AreaSearchStatus_GeoPoint_latitude_deg_pick(B, t)
        || AreaSearchStatus_GeoPoint_longitude_deg_pick(B, t)
        || AreaSearchStatus_GeoPoint_altitude_msl_m_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, AreaSearchStatus_GeoPoint_end(B));
}

__flatbuffers_build_table_field(0, flatbuffers_, AreaSearchStatus_GeoRectangle_upper_left_point, AreaSearchStatus_GeoPoint, AreaSearchStatus_GeoRectangle)
__flatbuffers_build_table_field(1, flatbuffers_, AreaSearchStatus_GeoRectangle_bottom_right_point, AreaSearchStatus_GeoPoint, AreaSearchStatus_GeoRectangle)

static inline AreaSearchStatus_GeoRectangle_ref_t AreaSearchStatus_GeoRectangle_create(flatbuffers_builder_t *B __AreaSearchStatus_GeoRectangle_formal_args)
{
    if (AreaSearchStatus_GeoRectangle_start(B)
        || AreaSearchStatus_GeoRectangle_upper_left_point_add(B, v0)
        || AreaSearchStatus_GeoRectangle_bottom_right_point_add(B, v1)) {
        return 0;
    }
    return AreaSearchStatus_GeoRectangle_end(B);
}

static AreaSearchStatus_GeoRectangle_ref_t AreaSearchStatus_GeoRectangle_clone(flatbuffers_builder_t *B, AreaSearchStatus_GeoRectangle_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (AreaSearchStatus_GeoRectangle_start(B)
        || AreaSearchStatus_GeoRectangle_upper_left_point_pick(B, t)
        || AreaSearchStatus_GeoRectangle_bottom_right_point_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, AreaSearchStatus_GeoRectangle_end(B));
}

__flatbuffers_build_scalar_field(0, flatbuffers_, AreaSearchStatus_AreaSearchStatus_vehicle_id, flatbuffers_uint64, uint64_t, 8, 8, UINT64_C(0), AreaSearchStatus_AreaSearchStatus)
__flatbuffers_build_scalar_field(1, flatbuffers_, AreaSearchStatus_AreaSearchStatus_timestamp_epoch_usec, flatbuffers_uint64, uint64_t, 8, 8, UINT64_C(0), AreaSearchStatus_AreaSearchStatus)
__flatbuffers_build_scalar_field(2, flatbuffers_, AreaSearchStatus_AreaSearchStatus_estimated_completion_time_epoch_usec, flatbuffers_uint64, uint64_t, 8, 8, UINT64_C(0), AreaSearchStatus_AreaSearchStatus)
__flatbuffers_build_scalar_field(3, flatbuffers_, AreaSearchStatus_AreaSearchStatus_estimated_percent_complete, flatbuffers_float, float, 4, 4, 0.00000000f, AreaSearchStatus_AreaSearchStatus)
__flatbuffers_build_table_field(4, flatbuffers_, AreaSearchStatus_AreaSearchStatus_heatmap_bounding_box, AreaSearchStatus_GeoRectangle, AreaSearchStatus_AreaSearchStatus)
__flatbuffers_build_scalar_field(5, flatbuffers_, AreaSearchStatus_AreaSearchStatus_heatmap_height, flatbuffers_uint16, uint16_t, 2, 2, UINT16_C(0), AreaSearchStatus_AreaSearchStatus)
__flatbuffers_build_scalar_field(6, flatbuffers_, AreaSearchStatus_AreaSearchStatus_heatmap_width, flatbuffers_uint16, uint16_t, 2, 2, UINT16_C(0), AreaSearchStatus_AreaSearchStatus)
__flatbuffers_build_vector_field(7, flatbuffers_, AreaSearchStatus_AreaSearchStatus_heatmap_data, flatbuffers_uint8, uint8_t, AreaSearchStatus_AreaSearchStatus)
__flatbuffers_build_scalar_field(8, flatbuffers_, AreaSearchStatus_AreaSearchStatus_active_geometry_type, AreaSearchStatus_GeometryKind_Enum, AreaSearchStatus_GeometryKind_Enum_enum_t, 4, 4, INT32_C(0), AreaSearchStatus_AreaSearchStatus)
__flatbuffers_build_table_vector_field(9, flatbuffers_, AreaSearchStatus_AreaSearchStatus_polygon, AreaSearchStatus_GeoPolygon, AreaSearchStatus_AreaSearchStatus)
__flatbuffers_build_table_vector_field(10, flatbuffers_, AreaSearchStatus_AreaSearchStatus_circle, AreaSearchStatus_GeoCircle, AreaSearchStatus_AreaSearchStatus)

static inline AreaSearchStatus_AreaSearchStatus_ref_t AreaSearchStatus_AreaSearchStatus_create(flatbuffers_builder_t *B __AreaSearchStatus_AreaSearchStatus_formal_args)
{
    if (AreaSearchStatus_AreaSearchStatus_start(B)
        || AreaSearchStatus_AreaSearchStatus_vehicle_id_add(B, v0)
        || AreaSearchStatus_AreaSearchStatus_timestamp_epoch_usec_add(B, v1)
        || AreaSearchStatus_AreaSearchStatus_estimated_completion_time_epoch_usec_add(B, v2)
        || AreaSearchStatus_AreaSearchStatus_estimated_percent_complete_add(B, v3)
        || AreaSearchStatus_AreaSearchStatus_heatmap_bounding_box_add(B, v4)
        || AreaSearchStatus_AreaSearchStatus_heatmap_data_add(B, v7)
        || AreaSearchStatus_AreaSearchStatus_active_geometry_type_add(B, v8)
        || AreaSearchStatus_AreaSearchStatus_polygon_add(B, v9)
        || AreaSearchStatus_AreaSearchStatus_circle_add(B, v10)
        || AreaSearchStatus_AreaSearchStatus_heatmap_height_add(B, v5)
        || AreaSearchStatus_AreaSearchStatus_heatmap_width_add(B, v6)) {
        return 0;
    }
    return AreaSearchStatus_AreaSearchStatus_end(B);
}

static AreaSearchStatus_AreaSearchStatus_ref_t AreaSearchStatus_AreaSearchStatus_clone(flatbuffers_builder_t *B, AreaSearchStatus_AreaSearchStatus_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (AreaSearchStatus_AreaSearchStatus_start(B)
        || AreaSearchStatus_AreaSearchStatus_vehicle_id_pick(B, t)
        || AreaSearchStatus_AreaSearchStatus_timestamp_epoch_usec_pick(B, t)
        || AreaSearchStatus_AreaSearchStatus_estimated_completion_time_epoch_usec_pick(B, t)
        || AreaSearchStatus_AreaSearchStatus_estimated_percent_complete_pick(B, t)
        || AreaSearchStatus_AreaSearchStatus_heatmap_bounding_box_pick(B, t)
        || AreaSearchStatus_AreaSearchStatus_heatmap_data_pick(B, t)
        || AreaSearchStatus_AreaSearchStatus_active_geometry_type_pick(B, t)
        || AreaSearchStatus_AreaSearchStatus_polygon_pick(B, t)
        || AreaSearchStatus_AreaSearchStatus_circle_pick(B, t)
        || AreaSearchStatus_AreaSearchStatus_heatmap_height_pick(B, t)
        || AreaSearchStatus_AreaSearchStatus_heatmap_width_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, AreaSearchStatus_AreaSearchStatus_end(B));
}

#include "flatcc/flatcc_epilogue.h"
#endif /* AREASEARCHSTATUS_BUILDER_H */
