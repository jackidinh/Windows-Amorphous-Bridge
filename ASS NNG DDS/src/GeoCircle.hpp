// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file GeoCircle.hpp
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool fastddsgen.
 */

#ifndef FAST_DDS_GENERATED__TEST_MSGS_PKG_MSG_GEOCIRCLE_HPP
#define FAST_DDS_GENERATED__TEST_MSGS_PKG_MSG_GEOCIRCLE_HPP

#include <cstdint>
#include <utility>

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#define eProsima_user_DllExport __declspec( dllexport )
#else
#define eProsima_user_DllExport
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define eProsima_user_DllExport
#endif  // _WIN32

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#if defined(GEOCIRCLE_SOURCE)
#define GEOCIRCLE_DllAPI __declspec( dllexport )
#else
#define GEOCIRCLE_DllAPI __declspec( dllimport )
#endif // GEOCIRCLE_SOURCE
#else
#define GEOCIRCLE_DllAPI
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define GEOCIRCLE_DllAPI
#endif // _WIN32

namespace test_msgs_pkg {

namespace msg {

/*!
 * @brief This class represents the structure GeoCircle defined by the user in the IDL file.
 * @ingroup GeoCircle
 */
class GeoCircle
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport GeoCircle()
    {
    }

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~GeoCircle()
    {
    }

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object GeoCircle that will be copied.
     */
    eProsima_user_DllExport GeoCircle(
            const GeoCircle& x)
    {
                    m_center = x.m_center;

                    m_radius_m = x.m_radius_m;

    }

    /*!
     * @brief Move constructor.
     * @param x Reference to the object GeoCircle that will be copied.
     */
    eProsima_user_DllExport GeoCircle(
            GeoCircle&& x) noexcept
    {
        m_center = x.m_center;
        m_radius_m = x.m_radius_m;
    }

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object GeoCircle that will be copied.
     */
    eProsima_user_DllExport GeoCircle& operator =(
            const GeoCircle& x)
    {

                    m_center = x.m_center;

                    m_radius_m = x.m_radius_m;

        return *this;
    }

    /*!
     * @brief Move assignment.
     * @param x Reference to the object GeoCircle that will be copied.
     */
    eProsima_user_DllExport GeoCircle& operator =(
            GeoCircle&& x) noexcept
    {

        m_center = x.m_center;
        m_radius_m = x.m_radius_m;
        return *this;
    }

    /*!
     * @brief Comparison operator.
     * @param x GeoCircle object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const GeoCircle& x) const
    {
        return (m_center == x.m_center &&
           m_radius_m == x.m_radius_m);
    }

    /*!
     * @brief Comparison operator.
     * @param x GeoCircle object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const GeoCircle& x) const
    {
        return !(*this == x);
    }

    /*!
     * @brief This function sets a value in member center
     * @param _center New value for member center
     */
    eProsima_user_DllExport void center(
            double _center)
    {
        m_center = _center;
    }

    /*!
     * @brief This function returns the value of member center
     * @return Value of member center
     */
    eProsima_user_DllExport double center() const
    {
        return m_center;
    }

    /*!
     * @brief This function returns a reference to member center
     * @return Reference to member center
     */
    eProsima_user_DllExport double& center()
    {
        return m_center;
    }


    /*!
     * @brief This function sets a value in member radius_m
     * @param _radius_m New value for member radius_m
     */
    eProsima_user_DllExport void radius_m(
            double _radius_m)
    {
        m_radius_m = _radius_m;
    }

    /*!
     * @brief This function returns the value of member radius_m
     * @return Value of member radius_m
     */
    eProsima_user_DllExport double radius_m() const
    {
        return m_radius_m;
    }

    /*!
     * @brief This function returns a reference to member radius_m
     * @return Reference to member radius_m
     */
    eProsima_user_DllExport double& radius_m()
    {
        return m_radius_m;
    }



private:

    double m_center{0.0};
    double m_radius_m{0.0};

};

} // namespace msg

} // namespace test_msgs_pkg

#endif // _FAST_DDS_GENERATED_TEST_MSGS_PKG_MSG_GEOCIRCLE_HPP_


